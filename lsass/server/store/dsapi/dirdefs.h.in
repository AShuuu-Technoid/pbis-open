/* Editor Settings: expandtabs and use 4 spaces for indentation
 * ex: set softtabstop=4 tabstop=8 expandtab shiftwidth=4: *
 * -*- mode: c, c-basic-offset: 4 -*- */

/*
 * Copyright Â© BeyondTrust Software 2004 - 2019
 * All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * BEYONDTRUST MAKES THIS SOFTWARE AVAILABLE UNDER OTHER LICENSING TERMS AS
 * WELL. IF YOU HAVE ENTERED INTO A SEPARATE LICENSE AGREEMENT WITH
 * BEYONDTRUST, THEN YOU MAY ELECT TO USE THE SOFTWARE UNDER THE TERMS OF THAT
 * SOFTWARE LICENSE AGREEMENT INSTEAD OF THE TERMS OF THE APACHE LICENSE,
 * NOTWITHSTANDING THE ABOVE NOTICE.  IF YOU HAVE QUESTIONS, OR WISH TO REQUEST
 * A COPY OF THE ALTERNATE LICENSING TERMS OFFERED BY BEYONDTRUST, PLEASE CONTACT
 * BEYONDTRUST AT beyondtrust.com/contact
 */



/*
 * Copyright (c) BeyondTrust Software. All rights reserved.
 *
 * Module Name:
 *
 *        dirdefs.h
 *
 * Abstract:
 *
 *
 *      BeyondTrust Directory Wrapper Interface
 *
 *      Defines
 *
 * Authors: Krishna Ganugapati (krishnag@likewisesoftware.com)
 *
 */
#ifndef _DIR_DEFS_H__
#define _DIR_DEFS_H__

typedef enum
{
    LOCAL_SAM = 0
} DirectoryType;

#define SAM_DB_PROVIDER_PATH "@providerdir@/libsamdb@MOD_EXT@"

#define DIRECTORY_LOG_ERROR(pszFormat, ...) LSA_LOG_ERROR(pszFormat, ## __VA_ARGS__)
#define DIRECTORY_LOG_WARNING(pszFormat, ...) LSA_LOG_WARNING(pszFormat, ## __VA_ARGS__)
#define DIRECTORY_LOG_INFO(pszFormat, ...) LSA_LOG_INFO(pszFormat, ## __VA_ARGS__)
#define DIRECTORY_LOG_VERBOSE(pszFormat, ...) LSA_LOG_VERBOSE(pszFormat, ## __VA_ARGS__)
#define DIRECTORY_LOG_DEBUG(pszFormat, ...) LSA_LOG_DEBUG(pszFormat, ## __VA_ARGS__)

#define BAIL_ON_DIRECTORY_ERROR(dwError) \
    BAIL_ON_LSA_ERROR((dwError));

#define BAIL_ON_NTSTATUS_ERROR(ntStatus) \
    BAIL_ON_NT_STATUS((ntStatus));

#define BAIL_ON_INVALIR_PTR(ptr)              \
    if ((ptr) == NULL)                        \
    {                                         \
        dwError = ERROR_INVALID_PARAMETER;    \
	BAIL_ON_DIRECTORY_ERROR(dwError);     \
    };

#define DIRECTORY_LOCK_MUTEX(bInLock, mutex) \
	if (!bInLock) { \
	   int thr_err = pthread_mutex_lock(mutex); \
	   if (thr_err) { \
	       DIRECTORY_LOG_ERROR("Failed to lock mutex. Aborting program"); \
	       abort(); \
	   } \
	   bInLock = TRUE; \
	}

#define DIRECTORY_UNLOCK_MUTEX(bInLock, mutex) \
	if (bInLock) { \
	   int thr_err = pthread_mutex_unlock(mutex); \
	   if (thr_err) { \
	       DIRECTORY_LOG_ERROR("Failed to unlock mutex. Aborting program"); \
	       abort(); \
	   } \
	   bInLock = FALSE; \
	}

#endif /* _DIR_DEFS_H__ */
