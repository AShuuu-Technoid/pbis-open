/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCKLWREG_H
#define _MOCKLWREG_H

#include <reg/lwreg.h>

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void Mocklwreg_Init(void);
void Mocklwreg_Destroy(void);
void Mocklwreg_Verify(void);




#define LwRegIsRegistrySpecificError_IgnoreAndReturn(cmock_retval) LwRegIsRegistrySpecificError_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void LwRegIsRegistrySpecificError_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, BOOLEAN cmock_to_return);
#define LwRegIsRegistrySpecificError_ExpectAndReturn(dwError, cmock_retval) LwRegIsRegistrySpecificError_CMockExpectAndReturn(__LINE__, dwError, cmock_retval)
void LwRegIsRegistrySpecificError_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, IN const DWORD dwError, BOOLEAN cmock_to_return);
#define LwRegIsRegistrySpecificError_IgnoreArg_dwError() LwRegIsRegistrySpecificError_CMockIgnoreArg_dwError(__LINE__)
void LwRegIsRegistrySpecificError_CMockIgnoreArg_dwError(UNITY_LINE_TYPE cmock_line);
#define LwRegGetErrorString_IgnoreAndReturn(cmock_retval) LwRegGetErrorString_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void LwRegGetErrorString_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, size_t cmock_to_return);
#define LwRegGetErrorString_ExpectAndReturn(dwError, pszBuffer, stBufSize, cmock_retval) LwRegGetErrorString_CMockExpectAndReturn(__LINE__, dwError, pszBuffer, stBufSize, cmock_retval)
void LwRegGetErrorString_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, DWORD dwError, PSTR pszBuffer, size_t stBufSize, size_t cmock_to_return);
#define LwRegGetErrorString_IgnoreArg_dwError() LwRegGetErrorString_CMockIgnoreArg_dwError(__LINE__)
void LwRegGetErrorString_CMockIgnoreArg_dwError(UNITY_LINE_TYPE cmock_line);
#define LwRegGetErrorString_IgnoreArg_pszBuffer() LwRegGetErrorString_CMockIgnoreArg_pszBuffer(__LINE__)
void LwRegGetErrorString_CMockIgnoreArg_pszBuffer(UNITY_LINE_TYPE cmock_line);
#define LwRegGetErrorString_IgnoreArg_stBufSize() LwRegGetErrorString_CMockIgnoreArg_stBufSize(__LINE__)
void LwRegGetErrorString_CMockIgnoreArg_stBufSize(UNITY_LINE_TYPE cmock_line);
#define LwRegOpenServer_IgnoreAndReturn(cmock_retval) LwRegOpenServer_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void LwRegOpenServer_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, DWORD cmock_to_return);
#define LwRegOpenServer_ExpectAndReturn(phConnection, cmock_retval) LwRegOpenServer_CMockExpectAndReturn(__LINE__, phConnection, cmock_retval)
void LwRegOpenServer_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, OUT PHANDLE phConnection, DWORD cmock_to_return);
#define LwRegOpenServer_IgnoreArg_phConnection() LwRegOpenServer_CMockIgnoreArg_phConnection(__LINE__)
void LwRegOpenServer_CMockIgnoreArg_phConnection(UNITY_LINE_TYPE cmock_line);
#define LwRegCloseServer_Ignore() LwRegCloseServer_CMockIgnore()
void LwRegCloseServer_CMockIgnore(void);
#define LwRegCloseServer_Expect(hConnection) LwRegCloseServer_CMockExpect(__LINE__, hConnection)
void LwRegCloseServer_CMockExpect(UNITY_LINE_TYPE cmock_line, IN HANDLE hConnection);
#define LwRegCloseServer_IgnoreArg_hConnection() LwRegCloseServer_CMockIgnoreArg_hConnection(__LINE__)
void LwRegCloseServer_CMockIgnoreArg_hConnection(UNITY_LINE_TYPE cmock_line);
#define LwRegEnumRootKeysA_IgnoreAndReturn(cmock_retval) LwRegEnumRootKeysA_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void LwRegEnumRootKeysA_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, DWORD cmock_to_return);
#define LwRegEnumRootKeysA_ExpectAndReturn(hRegConnection, pppszRootKeyNames, pdwNumRootKeys, cmock_retval) LwRegEnumRootKeysA_CMockExpectAndReturn(__LINE__, hRegConnection, pppszRootKeyNames, pdwNumRootKeys, cmock_retval)
void LwRegEnumRootKeysA_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, IN HANDLE hRegConnection, OUT PSTR** pppszRootKeyNames, OUT PDWORD pdwNumRootKeys, DWORD cmock_to_return);
#define LwRegEnumRootKeysA_ReturnThruPtr_pppszRootKeyNames(pppszRootKeyNames) LwRegEnumRootKeysA_CMockReturnMemThruPtr_pppszRootKeyNames(__LINE__, pppszRootKeyNames, sizeof(*pppszRootKeyNames))
#define LwRegEnumRootKeysA_ReturnArrayThruPtr_pppszRootKeyNames(pppszRootKeyNames, cmock_len) LwRegEnumRootKeysA_CMockReturnMemThruPtr_pppszRootKeyNames(__LINE__, pppszRootKeyNames, (int)(cmock_len * (int)sizeof(*pppszRootKeyNames)))
#define LwRegEnumRootKeysA_ReturnMemThruPtr_pppszRootKeyNames(pppszRootKeyNames, cmock_size) LwRegEnumRootKeysA_CMockReturnMemThruPtr_pppszRootKeyNames(__LINE__, pppszRootKeyNames, cmock_size)
void LwRegEnumRootKeysA_CMockReturnMemThruPtr_pppszRootKeyNames(UNITY_LINE_TYPE cmock_line, OUT PSTR** pppszRootKeyNames, int cmock_size);
#define LwRegEnumRootKeysA_IgnoreArg_hRegConnection() LwRegEnumRootKeysA_CMockIgnoreArg_hRegConnection(__LINE__)
void LwRegEnumRootKeysA_CMockIgnoreArg_hRegConnection(UNITY_LINE_TYPE cmock_line);
#define LwRegEnumRootKeysA_IgnoreArg_pppszRootKeyNames() LwRegEnumRootKeysA_CMockIgnoreArg_pppszRootKeyNames(__LINE__)
void LwRegEnumRootKeysA_CMockIgnoreArg_pppszRootKeyNames(UNITY_LINE_TYPE cmock_line);
#define LwRegEnumRootKeysA_IgnoreArg_pdwNumRootKeys() LwRegEnumRootKeysA_CMockIgnoreArg_pdwNumRootKeys(__LINE__)
void LwRegEnumRootKeysA_CMockIgnoreArg_pdwNumRootKeys(UNITY_LINE_TYPE cmock_line);
#define LwRegEnumRootKeysW_IgnoreAndReturn(cmock_retval) LwRegEnumRootKeysW_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void LwRegEnumRootKeysW_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, DWORD cmock_to_return);
#define LwRegEnumRootKeysW_ExpectAndReturn(hRegConnection, pppszRootKeyNames, pdwNumRootKeys, cmock_retval) LwRegEnumRootKeysW_CMockExpectAndReturn(__LINE__, hRegConnection, pppszRootKeyNames, pdwNumRootKeys, cmock_retval)
void LwRegEnumRootKeysW_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, IN HANDLE hRegConnection, OUT PWSTR** pppszRootKeyNames, OUT PDWORD pdwNumRootKeys, DWORD cmock_to_return);
#define LwRegEnumRootKeysW_ReturnThruPtr_pppszRootKeyNames(pppszRootKeyNames) LwRegEnumRootKeysW_CMockReturnMemThruPtr_pppszRootKeyNames(__LINE__, pppszRootKeyNames, sizeof(*pppszRootKeyNames))
#define LwRegEnumRootKeysW_ReturnArrayThruPtr_pppszRootKeyNames(pppszRootKeyNames, cmock_len) LwRegEnumRootKeysW_CMockReturnMemThruPtr_pppszRootKeyNames(__LINE__, pppszRootKeyNames, (int)(cmock_len * (int)sizeof(*pppszRootKeyNames)))
#define LwRegEnumRootKeysW_ReturnMemThruPtr_pppszRootKeyNames(pppszRootKeyNames, cmock_size) LwRegEnumRootKeysW_CMockReturnMemThruPtr_pppszRootKeyNames(__LINE__, pppszRootKeyNames, cmock_size)
void LwRegEnumRootKeysW_CMockReturnMemThruPtr_pppszRootKeyNames(UNITY_LINE_TYPE cmock_line, OUT PWSTR** pppszRootKeyNames, int cmock_size);
#define LwRegEnumRootKeysW_IgnoreArg_hRegConnection() LwRegEnumRootKeysW_CMockIgnoreArg_hRegConnection(__LINE__)
void LwRegEnumRootKeysW_CMockIgnoreArg_hRegConnection(UNITY_LINE_TYPE cmock_line);
#define LwRegEnumRootKeysW_IgnoreArg_pppszRootKeyNames() LwRegEnumRootKeysW_CMockIgnoreArg_pppszRootKeyNames(__LINE__)
void LwRegEnumRootKeysW_CMockIgnoreArg_pppszRootKeyNames(UNITY_LINE_TYPE cmock_line);
#define LwRegEnumRootKeysW_IgnoreArg_pdwNumRootKeys() LwRegEnumRootKeysW_CMockIgnoreArg_pdwNumRootKeys(__LINE__)
void LwRegEnumRootKeysW_CMockIgnoreArg_pdwNumRootKeys(UNITY_LINE_TYPE cmock_line);
#define LwRegCreateKeyExA_IgnoreAndReturn(cmock_retval) LwRegCreateKeyExA_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void LwRegCreateKeyExA_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, DWORD cmock_to_return);
#define LwRegCreateKeyExA_ExpectAndReturn(hRegConnection, hKey, pszSubKey, Reserved, pClass, dwOptions, AccessDesired, pSecurityDescriptor, phkResult, pdwDisposition, cmock_retval) LwRegCreateKeyExA_CMockExpectAndReturn(__LINE__, hRegConnection, hKey, pszSubKey, Reserved, pClass, dwOptions, AccessDesired, pSecurityDescriptor, phkResult, pdwDisposition, cmock_retval)
void LwRegCreateKeyExA_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, IN HANDLE hRegConnection, IN HKEY hKey, IN PCSTR pszSubKey, IN DWORD Reserved, IN OPTIONAL PWSTR pClass, IN DWORD dwOptions, IN ACCESS_MASK AccessDesired, IN OPTIONAL PSECURITY_DESCRIPTOR_ABSOLUTE pSecurityDescriptor, OUT PHKEY phkResult, OUT OPTIONAL PDWORD pdwDisposition, DWORD cmock_to_return);
#define LwRegCreateKeyExA_IgnoreArg_hRegConnection() LwRegCreateKeyExA_CMockIgnoreArg_hRegConnection(__LINE__)
void LwRegCreateKeyExA_CMockIgnoreArg_hRegConnection(UNITY_LINE_TYPE cmock_line);
#define LwRegCreateKeyExA_IgnoreArg_hKey() LwRegCreateKeyExA_CMockIgnoreArg_hKey(__LINE__)
void LwRegCreateKeyExA_CMockIgnoreArg_hKey(UNITY_LINE_TYPE cmock_line);
#define LwRegCreateKeyExA_IgnoreArg_pszSubKey() LwRegCreateKeyExA_CMockIgnoreArg_pszSubKey(__LINE__)
void LwRegCreateKeyExA_CMockIgnoreArg_pszSubKey(UNITY_LINE_TYPE cmock_line);
#define LwRegCreateKeyExA_IgnoreArg_Reserved() LwRegCreateKeyExA_CMockIgnoreArg_Reserved(__LINE__)
void LwRegCreateKeyExA_CMockIgnoreArg_Reserved(UNITY_LINE_TYPE cmock_line);
#define LwRegCreateKeyExA_IgnoreArg_pClass() LwRegCreateKeyExA_CMockIgnoreArg_pClass(__LINE__)
void LwRegCreateKeyExA_CMockIgnoreArg_pClass(UNITY_LINE_TYPE cmock_line);
#define LwRegCreateKeyExA_IgnoreArg_dwOptions() LwRegCreateKeyExA_CMockIgnoreArg_dwOptions(__LINE__)
void LwRegCreateKeyExA_CMockIgnoreArg_dwOptions(UNITY_LINE_TYPE cmock_line);
#define LwRegCreateKeyExA_IgnoreArg_AccessDesired() LwRegCreateKeyExA_CMockIgnoreArg_AccessDesired(__LINE__)
void LwRegCreateKeyExA_CMockIgnoreArg_AccessDesired(UNITY_LINE_TYPE cmock_line);
#define LwRegCreateKeyExA_IgnoreArg_pSecurityDescriptor() LwRegCreateKeyExA_CMockIgnoreArg_pSecurityDescriptor(__LINE__)
void LwRegCreateKeyExA_CMockIgnoreArg_pSecurityDescriptor(UNITY_LINE_TYPE cmock_line);
#define LwRegCreateKeyExA_IgnoreArg_phkResult() LwRegCreateKeyExA_CMockIgnoreArg_phkResult(__LINE__)
void LwRegCreateKeyExA_CMockIgnoreArg_phkResult(UNITY_LINE_TYPE cmock_line);
#define LwRegCreateKeyExA_IgnoreArg_pdwDisposition() LwRegCreateKeyExA_CMockIgnoreArg_pdwDisposition(__LINE__)
void LwRegCreateKeyExA_CMockIgnoreArg_pdwDisposition(UNITY_LINE_TYPE cmock_line);
#define LwRegCreateKeyExW_IgnoreAndReturn(cmock_retval) LwRegCreateKeyExW_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void LwRegCreateKeyExW_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, DWORD cmock_to_return);
#define LwRegCreateKeyExW_ExpectAndReturn(hRegConnection, hKey, pSubKey, Reserved, pClass, dwOptions, AccessDesired, pSecurityDescriptor, phkResult, pdwDisposition, cmock_retval) LwRegCreateKeyExW_CMockExpectAndReturn(__LINE__, hRegConnection, hKey, pSubKey, Reserved, pClass, dwOptions, AccessDesired, pSecurityDescriptor, phkResult, pdwDisposition, cmock_retval)
void LwRegCreateKeyExW_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, IN HANDLE hRegConnection, IN HKEY hKey, IN PCWSTR pSubKey, IN DWORD Reserved, IN OPTIONAL PWSTR pClass, IN DWORD dwOptions, IN ACCESS_MASK AccessDesired, IN OPTIONAL PSECURITY_DESCRIPTOR_ABSOLUTE pSecurityDescriptor, OUT PHKEY phkResult, OUT OPTIONAL PDWORD pdwDisposition, DWORD cmock_to_return);
#define LwRegCreateKeyExW_IgnoreArg_hRegConnection() LwRegCreateKeyExW_CMockIgnoreArg_hRegConnection(__LINE__)
void LwRegCreateKeyExW_CMockIgnoreArg_hRegConnection(UNITY_LINE_TYPE cmock_line);
#define LwRegCreateKeyExW_IgnoreArg_hKey() LwRegCreateKeyExW_CMockIgnoreArg_hKey(__LINE__)
void LwRegCreateKeyExW_CMockIgnoreArg_hKey(UNITY_LINE_TYPE cmock_line);
#define LwRegCreateKeyExW_IgnoreArg_pSubKey() LwRegCreateKeyExW_CMockIgnoreArg_pSubKey(__LINE__)
void LwRegCreateKeyExW_CMockIgnoreArg_pSubKey(UNITY_LINE_TYPE cmock_line);
#define LwRegCreateKeyExW_IgnoreArg_Reserved() LwRegCreateKeyExW_CMockIgnoreArg_Reserved(__LINE__)
void LwRegCreateKeyExW_CMockIgnoreArg_Reserved(UNITY_LINE_TYPE cmock_line);
#define LwRegCreateKeyExW_IgnoreArg_pClass() LwRegCreateKeyExW_CMockIgnoreArg_pClass(__LINE__)
void LwRegCreateKeyExW_CMockIgnoreArg_pClass(UNITY_LINE_TYPE cmock_line);
#define LwRegCreateKeyExW_IgnoreArg_dwOptions() LwRegCreateKeyExW_CMockIgnoreArg_dwOptions(__LINE__)
void LwRegCreateKeyExW_CMockIgnoreArg_dwOptions(UNITY_LINE_TYPE cmock_line);
#define LwRegCreateKeyExW_IgnoreArg_AccessDesired() LwRegCreateKeyExW_CMockIgnoreArg_AccessDesired(__LINE__)
void LwRegCreateKeyExW_CMockIgnoreArg_AccessDesired(UNITY_LINE_TYPE cmock_line);
#define LwRegCreateKeyExW_IgnoreArg_pSecurityDescriptor() LwRegCreateKeyExW_CMockIgnoreArg_pSecurityDescriptor(__LINE__)
void LwRegCreateKeyExW_CMockIgnoreArg_pSecurityDescriptor(UNITY_LINE_TYPE cmock_line);
#define LwRegCreateKeyExW_IgnoreArg_phkResult() LwRegCreateKeyExW_CMockIgnoreArg_phkResult(__LINE__)
void LwRegCreateKeyExW_CMockIgnoreArg_phkResult(UNITY_LINE_TYPE cmock_line);
#define LwRegCreateKeyExW_IgnoreArg_pdwDisposition() LwRegCreateKeyExW_CMockIgnoreArg_pdwDisposition(__LINE__)
void LwRegCreateKeyExW_CMockIgnoreArg_pdwDisposition(UNITY_LINE_TYPE cmock_line);
#define LwRegCloseKey_IgnoreAndReturn(cmock_retval) LwRegCloseKey_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void LwRegCloseKey_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, DWORD cmock_to_return);
#define LwRegCloseKey_ExpectAndReturn(hRegConnection, hKey, cmock_retval) LwRegCloseKey_CMockExpectAndReturn(__LINE__, hRegConnection, hKey, cmock_retval)
void LwRegCloseKey_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, IN HANDLE hRegConnection, IN HKEY hKey, DWORD cmock_to_return);
#define LwRegCloseKey_IgnoreArg_hRegConnection() LwRegCloseKey_CMockIgnoreArg_hRegConnection(__LINE__)
void LwRegCloseKey_CMockIgnoreArg_hRegConnection(UNITY_LINE_TYPE cmock_line);
#define LwRegCloseKey_IgnoreArg_hKey() LwRegCloseKey_CMockIgnoreArg_hKey(__LINE__)
void LwRegCloseKey_CMockIgnoreArg_hKey(UNITY_LINE_TYPE cmock_line);
#define LwRegDeleteKeyA_IgnoreAndReturn(cmock_retval) LwRegDeleteKeyA_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void LwRegDeleteKeyA_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, DWORD cmock_to_return);
#define LwRegDeleteKeyA_ExpectAndReturn(hRegConnection, hKey, pszSubKey, cmock_retval) LwRegDeleteKeyA_CMockExpectAndReturn(__LINE__, hRegConnection, hKey, pszSubKey, cmock_retval)
void LwRegDeleteKeyA_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, IN HANDLE hRegConnection, IN HKEY hKey, IN PCSTR pszSubKey, DWORD cmock_to_return);
#define LwRegDeleteKeyA_IgnoreArg_hRegConnection() LwRegDeleteKeyA_CMockIgnoreArg_hRegConnection(__LINE__)
void LwRegDeleteKeyA_CMockIgnoreArg_hRegConnection(UNITY_LINE_TYPE cmock_line);
#define LwRegDeleteKeyA_IgnoreArg_hKey() LwRegDeleteKeyA_CMockIgnoreArg_hKey(__LINE__)
void LwRegDeleteKeyA_CMockIgnoreArg_hKey(UNITY_LINE_TYPE cmock_line);
#define LwRegDeleteKeyA_IgnoreArg_pszSubKey() LwRegDeleteKeyA_CMockIgnoreArg_pszSubKey(__LINE__)
void LwRegDeleteKeyA_CMockIgnoreArg_pszSubKey(UNITY_LINE_TYPE cmock_line);
#define LwRegDeleteKeyW_IgnoreAndReturn(cmock_retval) LwRegDeleteKeyW_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void LwRegDeleteKeyW_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, DWORD cmock_to_return);
#define LwRegDeleteKeyW_ExpectAndReturn(hRegConnection, hKey, pSubKey, cmock_retval) LwRegDeleteKeyW_CMockExpectAndReturn(__LINE__, hRegConnection, hKey, pSubKey, cmock_retval)
void LwRegDeleteKeyW_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, IN HANDLE hRegConnection, IN HKEY hKey, IN PCWSTR pSubKey, DWORD cmock_to_return);
#define LwRegDeleteKeyW_IgnoreArg_hRegConnection() LwRegDeleteKeyW_CMockIgnoreArg_hRegConnection(__LINE__)
void LwRegDeleteKeyW_CMockIgnoreArg_hRegConnection(UNITY_LINE_TYPE cmock_line);
#define LwRegDeleteKeyW_IgnoreArg_hKey() LwRegDeleteKeyW_CMockIgnoreArg_hKey(__LINE__)
void LwRegDeleteKeyW_CMockIgnoreArg_hKey(UNITY_LINE_TYPE cmock_line);
#define LwRegDeleteKeyW_IgnoreArg_pSubKey() LwRegDeleteKeyW_CMockIgnoreArg_pSubKey(__LINE__)
void LwRegDeleteKeyW_CMockIgnoreArg_pSubKey(UNITY_LINE_TYPE cmock_line);
#define LwRegDeleteKeyValueA_IgnoreAndReturn(cmock_retval) LwRegDeleteKeyValueA_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void LwRegDeleteKeyValueA_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, DWORD cmock_to_return);
#define LwRegDeleteKeyValueA_ExpectAndReturn(hRegConnection, hKey, pszSubKey, pszValueName, cmock_retval) LwRegDeleteKeyValueA_CMockExpectAndReturn(__LINE__, hRegConnection, hKey, pszSubKey, pszValueName, cmock_retval)
void LwRegDeleteKeyValueA_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, IN HANDLE hRegConnection, IN HKEY hKey, IN OPTIONAL PCSTR pszSubKey, IN OPTIONAL PCSTR pszValueName, DWORD cmock_to_return);
#define LwRegDeleteKeyValueA_IgnoreArg_hRegConnection() LwRegDeleteKeyValueA_CMockIgnoreArg_hRegConnection(__LINE__)
void LwRegDeleteKeyValueA_CMockIgnoreArg_hRegConnection(UNITY_LINE_TYPE cmock_line);
#define LwRegDeleteKeyValueA_IgnoreArg_hKey() LwRegDeleteKeyValueA_CMockIgnoreArg_hKey(__LINE__)
void LwRegDeleteKeyValueA_CMockIgnoreArg_hKey(UNITY_LINE_TYPE cmock_line);
#define LwRegDeleteKeyValueA_IgnoreArg_pszSubKey() LwRegDeleteKeyValueA_CMockIgnoreArg_pszSubKey(__LINE__)
void LwRegDeleteKeyValueA_CMockIgnoreArg_pszSubKey(UNITY_LINE_TYPE cmock_line);
#define LwRegDeleteKeyValueA_IgnoreArg_pszValueName() LwRegDeleteKeyValueA_CMockIgnoreArg_pszValueName(__LINE__)
void LwRegDeleteKeyValueA_CMockIgnoreArg_pszValueName(UNITY_LINE_TYPE cmock_line);
#define LwRegDeleteKeyValueW_IgnoreAndReturn(cmock_retval) LwRegDeleteKeyValueW_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void LwRegDeleteKeyValueW_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, DWORD cmock_to_return);
#define LwRegDeleteKeyValueW_ExpectAndReturn(hRegConnection, hKey, pSubKey, pValueName, cmock_retval) LwRegDeleteKeyValueW_CMockExpectAndReturn(__LINE__, hRegConnection, hKey, pSubKey, pValueName, cmock_retval)
void LwRegDeleteKeyValueW_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, IN HANDLE hRegConnection, IN HKEY hKey, IN OPTIONAL PCWSTR pSubKey, IN OPTIONAL PCWSTR pValueName, DWORD cmock_to_return);
#define LwRegDeleteKeyValueW_IgnoreArg_hRegConnection() LwRegDeleteKeyValueW_CMockIgnoreArg_hRegConnection(__LINE__)
void LwRegDeleteKeyValueW_CMockIgnoreArg_hRegConnection(UNITY_LINE_TYPE cmock_line);
#define LwRegDeleteKeyValueW_IgnoreArg_hKey() LwRegDeleteKeyValueW_CMockIgnoreArg_hKey(__LINE__)
void LwRegDeleteKeyValueW_CMockIgnoreArg_hKey(UNITY_LINE_TYPE cmock_line);
#define LwRegDeleteKeyValueW_IgnoreArg_pSubKey() LwRegDeleteKeyValueW_CMockIgnoreArg_pSubKey(__LINE__)
void LwRegDeleteKeyValueW_CMockIgnoreArg_pSubKey(UNITY_LINE_TYPE cmock_line);
#define LwRegDeleteKeyValueW_IgnoreArg_pValueName() LwRegDeleteKeyValueW_CMockIgnoreArg_pValueName(__LINE__)
void LwRegDeleteKeyValueW_CMockIgnoreArg_pValueName(UNITY_LINE_TYPE cmock_line);
#define LwRegDeleteTreeA_IgnoreAndReturn(cmock_retval) LwRegDeleteTreeA_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void LwRegDeleteTreeA_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, DWORD cmock_to_return);
#define LwRegDeleteTreeA_ExpectAndReturn(hRegConnection, hKey, pszSubKey, cmock_retval) LwRegDeleteTreeA_CMockExpectAndReturn(__LINE__, hRegConnection, hKey, pszSubKey, cmock_retval)
void LwRegDeleteTreeA_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, IN HANDLE hRegConnection, IN HKEY hKey, IN OPTIONAL PCSTR pszSubKey, DWORD cmock_to_return);
#define LwRegDeleteTreeA_IgnoreArg_hRegConnection() LwRegDeleteTreeA_CMockIgnoreArg_hRegConnection(__LINE__)
void LwRegDeleteTreeA_CMockIgnoreArg_hRegConnection(UNITY_LINE_TYPE cmock_line);
#define LwRegDeleteTreeA_IgnoreArg_hKey() LwRegDeleteTreeA_CMockIgnoreArg_hKey(__LINE__)
void LwRegDeleteTreeA_CMockIgnoreArg_hKey(UNITY_LINE_TYPE cmock_line);
#define LwRegDeleteTreeA_IgnoreArg_pszSubKey() LwRegDeleteTreeA_CMockIgnoreArg_pszSubKey(__LINE__)
void LwRegDeleteTreeA_CMockIgnoreArg_pszSubKey(UNITY_LINE_TYPE cmock_line);
#define LwRegDeleteTreeW_IgnoreAndReturn(cmock_retval) LwRegDeleteTreeW_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void LwRegDeleteTreeW_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, DWORD cmock_to_return);
#define LwRegDeleteTreeW_ExpectAndReturn(hRegConnection, hKey, pSubKey, cmock_retval) LwRegDeleteTreeW_CMockExpectAndReturn(__LINE__, hRegConnection, hKey, pSubKey, cmock_retval)
void LwRegDeleteTreeW_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, IN HANDLE hRegConnection, IN HKEY hKey, IN OPTIONAL PCWSTR pSubKey, DWORD cmock_to_return);
#define LwRegDeleteTreeW_IgnoreArg_hRegConnection() LwRegDeleteTreeW_CMockIgnoreArg_hRegConnection(__LINE__)
void LwRegDeleteTreeW_CMockIgnoreArg_hRegConnection(UNITY_LINE_TYPE cmock_line);
#define LwRegDeleteTreeW_IgnoreArg_hKey() LwRegDeleteTreeW_CMockIgnoreArg_hKey(__LINE__)
void LwRegDeleteTreeW_CMockIgnoreArg_hKey(UNITY_LINE_TYPE cmock_line);
#define LwRegDeleteTreeW_IgnoreArg_pSubKey() LwRegDeleteTreeW_CMockIgnoreArg_pSubKey(__LINE__)
void LwRegDeleteTreeW_CMockIgnoreArg_pSubKey(UNITY_LINE_TYPE cmock_line);
#define LwRegDeleteValueA_IgnoreAndReturn(cmock_retval) LwRegDeleteValueA_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void LwRegDeleteValueA_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, DWORD cmock_to_return);
#define LwRegDeleteValueA_ExpectAndReturn(hRegConnection, hKey, pszValueName, cmock_retval) LwRegDeleteValueA_CMockExpectAndReturn(__LINE__, hRegConnection, hKey, pszValueName, cmock_retval)
void LwRegDeleteValueA_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, IN HANDLE hRegConnection, IN HKEY hKey, IN PCSTR pszValueName, DWORD cmock_to_return);
#define LwRegDeleteValueA_IgnoreArg_hRegConnection() LwRegDeleteValueA_CMockIgnoreArg_hRegConnection(__LINE__)
void LwRegDeleteValueA_CMockIgnoreArg_hRegConnection(UNITY_LINE_TYPE cmock_line);
#define LwRegDeleteValueA_IgnoreArg_hKey() LwRegDeleteValueA_CMockIgnoreArg_hKey(__LINE__)
void LwRegDeleteValueA_CMockIgnoreArg_hKey(UNITY_LINE_TYPE cmock_line);
#define LwRegDeleteValueA_IgnoreArg_pszValueName() LwRegDeleteValueA_CMockIgnoreArg_pszValueName(__LINE__)
void LwRegDeleteValueA_CMockIgnoreArg_pszValueName(UNITY_LINE_TYPE cmock_line);
#define LwRegDeleteValueW_IgnoreAndReturn(cmock_retval) LwRegDeleteValueW_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void LwRegDeleteValueW_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, DWORD cmock_to_return);
#define LwRegDeleteValueW_ExpectAndReturn(hRegConnection, hKey, pValueName, cmock_retval) LwRegDeleteValueW_CMockExpectAndReturn(__LINE__, hRegConnection, hKey, pValueName, cmock_retval)
void LwRegDeleteValueW_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, IN HANDLE hRegConnection, IN HKEY hKey, IN PCWSTR pValueName, DWORD cmock_to_return);
#define LwRegDeleteValueW_IgnoreArg_hRegConnection() LwRegDeleteValueW_CMockIgnoreArg_hRegConnection(__LINE__)
void LwRegDeleteValueW_CMockIgnoreArg_hRegConnection(UNITY_LINE_TYPE cmock_line);
#define LwRegDeleteValueW_IgnoreArg_hKey() LwRegDeleteValueW_CMockIgnoreArg_hKey(__LINE__)
void LwRegDeleteValueW_CMockIgnoreArg_hKey(UNITY_LINE_TYPE cmock_line);
#define LwRegDeleteValueW_IgnoreArg_pValueName() LwRegDeleteValueW_CMockIgnoreArg_pValueName(__LINE__)
void LwRegDeleteValueW_CMockIgnoreArg_pValueName(UNITY_LINE_TYPE cmock_line);
#define LwRegEnumKeyExA_IgnoreAndReturn(cmock_retval) LwRegEnumKeyExA_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void LwRegEnumKeyExA_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, DWORD cmock_to_return);
#define LwRegEnumKeyExA_ExpectAndReturn(hRegConnection, hKey, dwIndex, pszName, pcName, pReserved, pszClass, pcClass, pftLastWriteTime, cmock_retval) LwRegEnumKeyExA_CMockExpectAndReturn(__LINE__, hRegConnection, hKey, dwIndex, pszName, pcName, pReserved, pszClass, pcClass, pftLastWriteTime, cmock_retval)
void LwRegEnumKeyExA_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, IN HANDLE hRegConnection, IN HKEY hKey, IN DWORD dwIndex, IN OUT PSTR pszName, IN OUT PDWORD pcName, IN PDWORD pReserved, IN OUT OPTIONAL PSTR pszClass, IN OUT OPTIONAL PDWORD pcClass, OUT OPTIONAL PFILETIME pftLastWriteTime, DWORD cmock_to_return);
#define LwRegEnumKeyExA_IgnoreArg_hRegConnection() LwRegEnumKeyExA_CMockIgnoreArg_hRegConnection(__LINE__)
void LwRegEnumKeyExA_CMockIgnoreArg_hRegConnection(UNITY_LINE_TYPE cmock_line);
#define LwRegEnumKeyExA_IgnoreArg_hKey() LwRegEnumKeyExA_CMockIgnoreArg_hKey(__LINE__)
void LwRegEnumKeyExA_CMockIgnoreArg_hKey(UNITY_LINE_TYPE cmock_line);
#define LwRegEnumKeyExA_IgnoreArg_dwIndex() LwRegEnumKeyExA_CMockIgnoreArg_dwIndex(__LINE__)
void LwRegEnumKeyExA_CMockIgnoreArg_dwIndex(UNITY_LINE_TYPE cmock_line);
#define LwRegEnumKeyExA_IgnoreArg_pszName() LwRegEnumKeyExA_CMockIgnoreArg_pszName(__LINE__)
void LwRegEnumKeyExA_CMockIgnoreArg_pszName(UNITY_LINE_TYPE cmock_line);
#define LwRegEnumKeyExA_IgnoreArg_pcName() LwRegEnumKeyExA_CMockIgnoreArg_pcName(__LINE__)
void LwRegEnumKeyExA_CMockIgnoreArg_pcName(UNITY_LINE_TYPE cmock_line);
#define LwRegEnumKeyExA_IgnoreArg_pReserved() LwRegEnumKeyExA_CMockIgnoreArg_pReserved(__LINE__)
void LwRegEnumKeyExA_CMockIgnoreArg_pReserved(UNITY_LINE_TYPE cmock_line);
#define LwRegEnumKeyExA_IgnoreArg_pszClass() LwRegEnumKeyExA_CMockIgnoreArg_pszClass(__LINE__)
void LwRegEnumKeyExA_CMockIgnoreArg_pszClass(UNITY_LINE_TYPE cmock_line);
#define LwRegEnumKeyExA_IgnoreArg_pcClass() LwRegEnumKeyExA_CMockIgnoreArg_pcClass(__LINE__)
void LwRegEnumKeyExA_CMockIgnoreArg_pcClass(UNITY_LINE_TYPE cmock_line);
#define LwRegEnumKeyExA_IgnoreArg_pftLastWriteTime() LwRegEnumKeyExA_CMockIgnoreArg_pftLastWriteTime(__LINE__)
void LwRegEnumKeyExA_CMockIgnoreArg_pftLastWriteTime(UNITY_LINE_TYPE cmock_line);
#define LwRegEnumKeyExW_IgnoreAndReturn(cmock_retval) LwRegEnumKeyExW_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void LwRegEnumKeyExW_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, DWORD cmock_to_return);
#define LwRegEnumKeyExW_ExpectAndReturn(hRegConnection, hKey, dwIndex, pName, pcName, pReserved, pClass, pcClass, pftLastWriteTime, cmock_retval) LwRegEnumKeyExW_CMockExpectAndReturn(__LINE__, hRegConnection, hKey, dwIndex, pName, pcName, pReserved, pClass, pcClass, pftLastWriteTime, cmock_retval)
void LwRegEnumKeyExW_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, IN HANDLE hRegConnection, IN HKEY hKey, IN DWORD dwIndex, IN OUT PWSTR pName, IN OUT PDWORD pcName, IN PDWORD pReserved, IN OUT PWSTR pClass, IN OUT OPTIONAL PDWORD pcClass, OUT OPTIONAL PFILETIME pftLastWriteTime, DWORD cmock_to_return);
#define LwRegEnumKeyExW_IgnoreArg_hRegConnection() LwRegEnumKeyExW_CMockIgnoreArg_hRegConnection(__LINE__)
void LwRegEnumKeyExW_CMockIgnoreArg_hRegConnection(UNITY_LINE_TYPE cmock_line);
#define LwRegEnumKeyExW_IgnoreArg_hKey() LwRegEnumKeyExW_CMockIgnoreArg_hKey(__LINE__)
void LwRegEnumKeyExW_CMockIgnoreArg_hKey(UNITY_LINE_TYPE cmock_line);
#define LwRegEnumKeyExW_IgnoreArg_dwIndex() LwRegEnumKeyExW_CMockIgnoreArg_dwIndex(__LINE__)
void LwRegEnumKeyExW_CMockIgnoreArg_dwIndex(UNITY_LINE_TYPE cmock_line);
#define LwRegEnumKeyExW_IgnoreArg_pName() LwRegEnumKeyExW_CMockIgnoreArg_pName(__LINE__)
void LwRegEnumKeyExW_CMockIgnoreArg_pName(UNITY_LINE_TYPE cmock_line);
#define LwRegEnumKeyExW_IgnoreArg_pcName() LwRegEnumKeyExW_CMockIgnoreArg_pcName(__LINE__)
void LwRegEnumKeyExW_CMockIgnoreArg_pcName(UNITY_LINE_TYPE cmock_line);
#define LwRegEnumKeyExW_IgnoreArg_pReserved() LwRegEnumKeyExW_CMockIgnoreArg_pReserved(__LINE__)
void LwRegEnumKeyExW_CMockIgnoreArg_pReserved(UNITY_LINE_TYPE cmock_line);
#define LwRegEnumKeyExW_IgnoreArg_pClass() LwRegEnumKeyExW_CMockIgnoreArg_pClass(__LINE__)
void LwRegEnumKeyExW_CMockIgnoreArg_pClass(UNITY_LINE_TYPE cmock_line);
#define LwRegEnumKeyExW_IgnoreArg_pcClass() LwRegEnumKeyExW_CMockIgnoreArg_pcClass(__LINE__)
void LwRegEnumKeyExW_CMockIgnoreArg_pcClass(UNITY_LINE_TYPE cmock_line);
#define LwRegEnumKeyExW_IgnoreArg_pftLastWriteTime() LwRegEnumKeyExW_CMockIgnoreArg_pftLastWriteTime(__LINE__)
void LwRegEnumKeyExW_CMockIgnoreArg_pftLastWriteTime(UNITY_LINE_TYPE cmock_line);
#define LwRegEnumValueA_IgnoreAndReturn(cmock_retval) LwRegEnumValueA_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void LwRegEnumValueA_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, DWORD cmock_to_return);
#define LwRegEnumValueA_ExpectAndReturn(hRegConnection, hKey, dwIndex, pszValueName, pcchValueName, pReserved, pdwType, pData, pcbData, cmock_retval) LwRegEnumValueA_CMockExpectAndReturn(__LINE__, hRegConnection, hKey, dwIndex, pszValueName, pcchValueName, pReserved, pdwType, pData, pcbData, cmock_retval)
void LwRegEnumValueA_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, IN HANDLE hRegConnection, IN HKEY hKey, IN DWORD dwIndex, OUT PSTR pszValueName, IN OUT PDWORD pcchValueName, IN OPTIONAL PDWORD pReserved, OUT OPTIONAL PDWORD pdwType, OUT OPTIONAL PBYTE pData, IN OUT OPTIONAL PDWORD pcbData, DWORD cmock_to_return);
#define LwRegEnumValueA_IgnoreArg_hRegConnection() LwRegEnumValueA_CMockIgnoreArg_hRegConnection(__LINE__)
void LwRegEnumValueA_CMockIgnoreArg_hRegConnection(UNITY_LINE_TYPE cmock_line);
#define LwRegEnumValueA_IgnoreArg_hKey() LwRegEnumValueA_CMockIgnoreArg_hKey(__LINE__)
void LwRegEnumValueA_CMockIgnoreArg_hKey(UNITY_LINE_TYPE cmock_line);
#define LwRegEnumValueA_IgnoreArg_dwIndex() LwRegEnumValueA_CMockIgnoreArg_dwIndex(__LINE__)
void LwRegEnumValueA_CMockIgnoreArg_dwIndex(UNITY_LINE_TYPE cmock_line);
#define LwRegEnumValueA_IgnoreArg_pszValueName() LwRegEnumValueA_CMockIgnoreArg_pszValueName(__LINE__)
void LwRegEnumValueA_CMockIgnoreArg_pszValueName(UNITY_LINE_TYPE cmock_line);
#define LwRegEnumValueA_IgnoreArg_pcchValueName() LwRegEnumValueA_CMockIgnoreArg_pcchValueName(__LINE__)
void LwRegEnumValueA_CMockIgnoreArg_pcchValueName(UNITY_LINE_TYPE cmock_line);
#define LwRegEnumValueA_IgnoreArg_pReserved() LwRegEnumValueA_CMockIgnoreArg_pReserved(__LINE__)
void LwRegEnumValueA_CMockIgnoreArg_pReserved(UNITY_LINE_TYPE cmock_line);
#define LwRegEnumValueA_IgnoreArg_pdwType() LwRegEnumValueA_CMockIgnoreArg_pdwType(__LINE__)
void LwRegEnumValueA_CMockIgnoreArg_pdwType(UNITY_LINE_TYPE cmock_line);
#define LwRegEnumValueA_IgnoreArg_pData() LwRegEnumValueA_CMockIgnoreArg_pData(__LINE__)
void LwRegEnumValueA_CMockIgnoreArg_pData(UNITY_LINE_TYPE cmock_line);
#define LwRegEnumValueA_IgnoreArg_pcbData() LwRegEnumValueA_CMockIgnoreArg_pcbData(__LINE__)
void LwRegEnumValueA_CMockIgnoreArg_pcbData(UNITY_LINE_TYPE cmock_line);
#define LwRegEnumValueW_IgnoreAndReturn(cmock_retval) LwRegEnumValueW_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void LwRegEnumValueW_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, DWORD cmock_to_return);
#define LwRegEnumValueW_ExpectAndReturn(hRegConnection, hKey, dwIndex, pValueName, pcchValueName, pReserved, pType, pData, pcbData, cmock_retval) LwRegEnumValueW_CMockExpectAndReturn(__LINE__, hRegConnection, hKey, dwIndex, pValueName, pcchValueName, pReserved, pType, pData, pcbData, cmock_retval)
void LwRegEnumValueW_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, IN HANDLE hRegConnection, IN HKEY hKey, IN DWORD dwIndex, OUT PWSTR pValueName, IN OUT PDWORD pcchValueName, IN PDWORD pReserved, OUT OPTIONAL PDWORD pType, OUT OPTIONAL PBYTE pData, IN OUT OPTIONAL PDWORD pcbData, DWORD cmock_to_return);
#define LwRegEnumValueW_IgnoreArg_hRegConnection() LwRegEnumValueW_CMockIgnoreArg_hRegConnection(__LINE__)
void LwRegEnumValueW_CMockIgnoreArg_hRegConnection(UNITY_LINE_TYPE cmock_line);
#define LwRegEnumValueW_IgnoreArg_hKey() LwRegEnumValueW_CMockIgnoreArg_hKey(__LINE__)
void LwRegEnumValueW_CMockIgnoreArg_hKey(UNITY_LINE_TYPE cmock_line);
#define LwRegEnumValueW_IgnoreArg_dwIndex() LwRegEnumValueW_CMockIgnoreArg_dwIndex(__LINE__)
void LwRegEnumValueW_CMockIgnoreArg_dwIndex(UNITY_LINE_TYPE cmock_line);
#define LwRegEnumValueW_IgnoreArg_pValueName() LwRegEnumValueW_CMockIgnoreArg_pValueName(__LINE__)
void LwRegEnumValueW_CMockIgnoreArg_pValueName(UNITY_LINE_TYPE cmock_line);
#define LwRegEnumValueW_IgnoreArg_pcchValueName() LwRegEnumValueW_CMockIgnoreArg_pcchValueName(__LINE__)
void LwRegEnumValueW_CMockIgnoreArg_pcchValueName(UNITY_LINE_TYPE cmock_line);
#define LwRegEnumValueW_IgnoreArg_pReserved() LwRegEnumValueW_CMockIgnoreArg_pReserved(__LINE__)
void LwRegEnumValueW_CMockIgnoreArg_pReserved(UNITY_LINE_TYPE cmock_line);
#define LwRegEnumValueW_IgnoreArg_pType() LwRegEnumValueW_CMockIgnoreArg_pType(__LINE__)
void LwRegEnumValueW_CMockIgnoreArg_pType(UNITY_LINE_TYPE cmock_line);
#define LwRegEnumValueW_IgnoreArg_pData() LwRegEnumValueW_CMockIgnoreArg_pData(__LINE__)
void LwRegEnumValueW_CMockIgnoreArg_pData(UNITY_LINE_TYPE cmock_line);
#define LwRegEnumValueW_IgnoreArg_pcbData() LwRegEnumValueW_CMockIgnoreArg_pcbData(__LINE__)
void LwRegEnumValueW_CMockIgnoreArg_pcbData(UNITY_LINE_TYPE cmock_line);
#define LwRegGetValueA_IgnoreAndReturn(cmock_retval) LwRegGetValueA_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void LwRegGetValueA_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, DWORD cmock_to_return);
#define LwRegGetValueA_ExpectAndReturn(hRegConnection, hKey, pSubKey, pszValueName, Flags, pdwType, pvData, pcbData, cmock_retval) LwRegGetValueA_CMockExpectAndReturn(__LINE__, hRegConnection, hKey, pSubKey, pszValueName, Flags, pdwType, pvData, pcbData, cmock_retval)
void LwRegGetValueA_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, IN HANDLE hRegConnection, IN HKEY hKey, IN OPTIONAL PCSTR pSubKey, IN OPTIONAL PCSTR pszValueName, IN OPTIONAL REG_DATA_TYPE_FLAGS Flags, OUT OPTIONAL PDWORD pdwType, OUT OPTIONAL PVOID pvData, IN OUT OPTIONAL PDWORD pcbData, DWORD cmock_to_return);
#define LwRegGetValueA_IgnoreArg_hRegConnection() LwRegGetValueA_CMockIgnoreArg_hRegConnection(__LINE__)
void LwRegGetValueA_CMockIgnoreArg_hRegConnection(UNITY_LINE_TYPE cmock_line);
#define LwRegGetValueA_IgnoreArg_hKey() LwRegGetValueA_CMockIgnoreArg_hKey(__LINE__)
void LwRegGetValueA_CMockIgnoreArg_hKey(UNITY_LINE_TYPE cmock_line);
#define LwRegGetValueA_IgnoreArg_pSubKey() LwRegGetValueA_CMockIgnoreArg_pSubKey(__LINE__)
void LwRegGetValueA_CMockIgnoreArg_pSubKey(UNITY_LINE_TYPE cmock_line);
#define LwRegGetValueA_IgnoreArg_pszValueName() LwRegGetValueA_CMockIgnoreArg_pszValueName(__LINE__)
void LwRegGetValueA_CMockIgnoreArg_pszValueName(UNITY_LINE_TYPE cmock_line);
#define LwRegGetValueA_IgnoreArg_Flags() LwRegGetValueA_CMockIgnoreArg_Flags(__LINE__)
void LwRegGetValueA_CMockIgnoreArg_Flags(UNITY_LINE_TYPE cmock_line);
#define LwRegGetValueA_IgnoreArg_pdwType() LwRegGetValueA_CMockIgnoreArg_pdwType(__LINE__)
void LwRegGetValueA_CMockIgnoreArg_pdwType(UNITY_LINE_TYPE cmock_line);
#define LwRegGetValueA_IgnoreArg_pvData() LwRegGetValueA_CMockIgnoreArg_pvData(__LINE__)
void LwRegGetValueA_CMockIgnoreArg_pvData(UNITY_LINE_TYPE cmock_line);
#define LwRegGetValueA_IgnoreArg_pcbData() LwRegGetValueA_CMockIgnoreArg_pcbData(__LINE__)
void LwRegGetValueA_CMockIgnoreArg_pcbData(UNITY_LINE_TYPE cmock_line);
#define LwRegGetValueW_IgnoreAndReturn(cmock_retval) LwRegGetValueW_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void LwRegGetValueW_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, DWORD cmock_to_return);
#define LwRegGetValueW_ExpectAndReturn(hRegConnection, hKey, pSubKey, pValueName, Flags, pdwType, pvData, pcbData, cmock_retval) LwRegGetValueW_CMockExpectAndReturn(__LINE__, hRegConnection, hKey, pSubKey, pValueName, Flags, pdwType, pvData, pcbData, cmock_retval)
void LwRegGetValueW_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, IN HANDLE hRegConnection, IN HKEY hKey, IN OPTIONAL PCWSTR pSubKey, IN OPTIONAL PCWSTR pValueName, IN OPTIONAL REG_DATA_TYPE_FLAGS Flags, OUT OPTIONAL PDWORD pdwType, OUT OPTIONAL PVOID pvData, IN OUT OPTIONAL PDWORD pcbData, DWORD cmock_to_return);
#define LwRegGetValueW_IgnoreArg_hRegConnection() LwRegGetValueW_CMockIgnoreArg_hRegConnection(__LINE__)
void LwRegGetValueW_CMockIgnoreArg_hRegConnection(UNITY_LINE_TYPE cmock_line);
#define LwRegGetValueW_IgnoreArg_hKey() LwRegGetValueW_CMockIgnoreArg_hKey(__LINE__)
void LwRegGetValueW_CMockIgnoreArg_hKey(UNITY_LINE_TYPE cmock_line);
#define LwRegGetValueW_IgnoreArg_pSubKey() LwRegGetValueW_CMockIgnoreArg_pSubKey(__LINE__)
void LwRegGetValueW_CMockIgnoreArg_pSubKey(UNITY_LINE_TYPE cmock_line);
#define LwRegGetValueW_IgnoreArg_pValueName() LwRegGetValueW_CMockIgnoreArg_pValueName(__LINE__)
void LwRegGetValueW_CMockIgnoreArg_pValueName(UNITY_LINE_TYPE cmock_line);
#define LwRegGetValueW_IgnoreArg_Flags() LwRegGetValueW_CMockIgnoreArg_Flags(__LINE__)
void LwRegGetValueW_CMockIgnoreArg_Flags(UNITY_LINE_TYPE cmock_line);
#define LwRegGetValueW_IgnoreArg_pdwType() LwRegGetValueW_CMockIgnoreArg_pdwType(__LINE__)
void LwRegGetValueW_CMockIgnoreArg_pdwType(UNITY_LINE_TYPE cmock_line);
#define LwRegGetValueW_IgnoreArg_pvData() LwRegGetValueW_CMockIgnoreArg_pvData(__LINE__)
void LwRegGetValueW_CMockIgnoreArg_pvData(UNITY_LINE_TYPE cmock_line);
#define LwRegGetValueW_IgnoreArg_pcbData() LwRegGetValueW_CMockIgnoreArg_pcbData(__LINE__)
void LwRegGetValueW_CMockIgnoreArg_pcbData(UNITY_LINE_TYPE cmock_line);
#define LwRegOpenKeyExA_IgnoreAndReturn(cmock_retval) LwRegOpenKeyExA_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void LwRegOpenKeyExA_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, DWORD cmock_to_return);
#define LwRegOpenKeyExA_ExpectAndReturn(hRegConnection, hKey, pszSubKey, ulOptions, AccessDesired, phkResult, cmock_retval) LwRegOpenKeyExA_CMockExpectAndReturn(__LINE__, hRegConnection, hKey, pszSubKey, ulOptions, AccessDesired, phkResult, cmock_retval)
void LwRegOpenKeyExA_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, IN HANDLE hRegConnection, IN HKEY hKey, IN OPTIONAL PCSTR pszSubKey, IN DWORD ulOptions, IN ACCESS_MASK AccessDesired, OUT PHKEY phkResult, DWORD cmock_to_return);
#define LwRegOpenKeyExA_IgnoreArg_hRegConnection() LwRegOpenKeyExA_CMockIgnoreArg_hRegConnection(__LINE__)
void LwRegOpenKeyExA_CMockIgnoreArg_hRegConnection(UNITY_LINE_TYPE cmock_line);
#define LwRegOpenKeyExA_IgnoreArg_hKey() LwRegOpenKeyExA_CMockIgnoreArg_hKey(__LINE__)
void LwRegOpenKeyExA_CMockIgnoreArg_hKey(UNITY_LINE_TYPE cmock_line);
#define LwRegOpenKeyExA_IgnoreArg_pszSubKey() LwRegOpenKeyExA_CMockIgnoreArg_pszSubKey(__LINE__)
void LwRegOpenKeyExA_CMockIgnoreArg_pszSubKey(UNITY_LINE_TYPE cmock_line);
#define LwRegOpenKeyExA_IgnoreArg_ulOptions() LwRegOpenKeyExA_CMockIgnoreArg_ulOptions(__LINE__)
void LwRegOpenKeyExA_CMockIgnoreArg_ulOptions(UNITY_LINE_TYPE cmock_line);
#define LwRegOpenKeyExA_IgnoreArg_AccessDesired() LwRegOpenKeyExA_CMockIgnoreArg_AccessDesired(__LINE__)
void LwRegOpenKeyExA_CMockIgnoreArg_AccessDesired(UNITY_LINE_TYPE cmock_line);
#define LwRegOpenKeyExA_IgnoreArg_phkResult() LwRegOpenKeyExA_CMockIgnoreArg_phkResult(__LINE__)
void LwRegOpenKeyExA_CMockIgnoreArg_phkResult(UNITY_LINE_TYPE cmock_line);
#define LwRegOpenKeyExW_IgnoreAndReturn(cmock_retval) LwRegOpenKeyExW_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void LwRegOpenKeyExW_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, DWORD cmock_to_return);
#define LwRegOpenKeyExW_ExpectAndReturn(hRegConnection, hKey, pSubKey, ulOptions, AccessDesired, phkResult, cmock_retval) LwRegOpenKeyExW_CMockExpectAndReturn(__LINE__, hRegConnection, hKey, pSubKey, ulOptions, AccessDesired, phkResult, cmock_retval)
void LwRegOpenKeyExW_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, IN HANDLE hRegConnection, IN HKEY hKey, IN OPTIONAL PCWSTR pSubKey, IN DWORD ulOptions, IN ACCESS_MASK AccessDesired, OUT PHKEY phkResult, DWORD cmock_to_return);
#define LwRegOpenKeyExW_IgnoreArg_hRegConnection() LwRegOpenKeyExW_CMockIgnoreArg_hRegConnection(__LINE__)
void LwRegOpenKeyExW_CMockIgnoreArg_hRegConnection(UNITY_LINE_TYPE cmock_line);
#define LwRegOpenKeyExW_IgnoreArg_hKey() LwRegOpenKeyExW_CMockIgnoreArg_hKey(__LINE__)
void LwRegOpenKeyExW_CMockIgnoreArg_hKey(UNITY_LINE_TYPE cmock_line);
#define LwRegOpenKeyExW_IgnoreArg_pSubKey() LwRegOpenKeyExW_CMockIgnoreArg_pSubKey(__LINE__)
void LwRegOpenKeyExW_CMockIgnoreArg_pSubKey(UNITY_LINE_TYPE cmock_line);
#define LwRegOpenKeyExW_IgnoreArg_ulOptions() LwRegOpenKeyExW_CMockIgnoreArg_ulOptions(__LINE__)
void LwRegOpenKeyExW_CMockIgnoreArg_ulOptions(UNITY_LINE_TYPE cmock_line);
#define LwRegOpenKeyExW_IgnoreArg_AccessDesired() LwRegOpenKeyExW_CMockIgnoreArg_AccessDesired(__LINE__)
void LwRegOpenKeyExW_CMockIgnoreArg_AccessDesired(UNITY_LINE_TYPE cmock_line);
#define LwRegOpenKeyExW_IgnoreArg_phkResult() LwRegOpenKeyExW_CMockIgnoreArg_phkResult(__LINE__)
void LwRegOpenKeyExW_CMockIgnoreArg_phkResult(UNITY_LINE_TYPE cmock_line);
#define LwRegQueryInfoKeyA_IgnoreAndReturn(cmock_retval) LwRegQueryInfoKeyA_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void LwRegQueryInfoKeyA_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, DWORD cmock_to_return);
#define LwRegQueryInfoKeyA_ExpectAndReturn(hRegConnection, hKey, pszClass, pcClass, pReserved, pcSubKeys, pcMaxSubKeyLen, pcMaxClassLen, pcValues, pcMaxValueNameLen, pcMaxValueLen, pulSecDescLen, pftLastWriteTime, cmock_retval) LwRegQueryInfoKeyA_CMockExpectAndReturn(__LINE__, hRegConnection, hKey, pszClass, pcClass, pReserved, pcSubKeys, pcMaxSubKeyLen, pcMaxClassLen, pcValues, pcMaxValueNameLen, pcMaxValueLen, pulSecDescLen, pftLastWriteTime, cmock_retval)
void LwRegQueryInfoKeyA_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, IN HANDLE hRegConnection, IN HKEY hKey, OUT OPTIONAL PSTR pszClass, IN OUT OPTIONAL PDWORD pcClass, IN PDWORD pReserved, OUT OPTIONAL PDWORD pcSubKeys, OUT OPTIONAL PDWORD pcMaxSubKeyLen, OUT OPTIONAL PDWORD pcMaxClassLen, OUT OPTIONAL PDWORD pcValues, OUT OPTIONAL PDWORD pcMaxValueNameLen, OUT OPTIONAL PDWORD pcMaxValueLen, OUT OPTIONAL PULONG pulSecDescLen, OUT OPTIONAL PFILETIME pftLastWriteTime, DWORD cmock_to_return);
#define LwRegQueryInfoKeyA_IgnoreArg_hRegConnection() LwRegQueryInfoKeyA_CMockIgnoreArg_hRegConnection(__LINE__)
void LwRegQueryInfoKeyA_CMockIgnoreArg_hRegConnection(UNITY_LINE_TYPE cmock_line);
#define LwRegQueryInfoKeyA_IgnoreArg_hKey() LwRegQueryInfoKeyA_CMockIgnoreArg_hKey(__LINE__)
void LwRegQueryInfoKeyA_CMockIgnoreArg_hKey(UNITY_LINE_TYPE cmock_line);
#define LwRegQueryInfoKeyA_IgnoreArg_pszClass() LwRegQueryInfoKeyA_CMockIgnoreArg_pszClass(__LINE__)
void LwRegQueryInfoKeyA_CMockIgnoreArg_pszClass(UNITY_LINE_TYPE cmock_line);
#define LwRegQueryInfoKeyA_IgnoreArg_pcClass() LwRegQueryInfoKeyA_CMockIgnoreArg_pcClass(__LINE__)
void LwRegQueryInfoKeyA_CMockIgnoreArg_pcClass(UNITY_LINE_TYPE cmock_line);
#define LwRegQueryInfoKeyA_IgnoreArg_pReserved() LwRegQueryInfoKeyA_CMockIgnoreArg_pReserved(__LINE__)
void LwRegQueryInfoKeyA_CMockIgnoreArg_pReserved(UNITY_LINE_TYPE cmock_line);
#define LwRegQueryInfoKeyA_IgnoreArg_pcSubKeys() LwRegQueryInfoKeyA_CMockIgnoreArg_pcSubKeys(__LINE__)
void LwRegQueryInfoKeyA_CMockIgnoreArg_pcSubKeys(UNITY_LINE_TYPE cmock_line);
#define LwRegQueryInfoKeyA_IgnoreArg_pcMaxSubKeyLen() LwRegQueryInfoKeyA_CMockIgnoreArg_pcMaxSubKeyLen(__LINE__)
void LwRegQueryInfoKeyA_CMockIgnoreArg_pcMaxSubKeyLen(UNITY_LINE_TYPE cmock_line);
#define LwRegQueryInfoKeyA_IgnoreArg_pcMaxClassLen() LwRegQueryInfoKeyA_CMockIgnoreArg_pcMaxClassLen(__LINE__)
void LwRegQueryInfoKeyA_CMockIgnoreArg_pcMaxClassLen(UNITY_LINE_TYPE cmock_line);
#define LwRegQueryInfoKeyA_IgnoreArg_pcValues() LwRegQueryInfoKeyA_CMockIgnoreArg_pcValues(__LINE__)
void LwRegQueryInfoKeyA_CMockIgnoreArg_pcValues(UNITY_LINE_TYPE cmock_line);
#define LwRegQueryInfoKeyA_IgnoreArg_pcMaxValueNameLen() LwRegQueryInfoKeyA_CMockIgnoreArg_pcMaxValueNameLen(__LINE__)
void LwRegQueryInfoKeyA_CMockIgnoreArg_pcMaxValueNameLen(UNITY_LINE_TYPE cmock_line);
#define LwRegQueryInfoKeyA_IgnoreArg_pcMaxValueLen() LwRegQueryInfoKeyA_CMockIgnoreArg_pcMaxValueLen(__LINE__)
void LwRegQueryInfoKeyA_CMockIgnoreArg_pcMaxValueLen(UNITY_LINE_TYPE cmock_line);
#define LwRegQueryInfoKeyA_IgnoreArg_pulSecDescLen() LwRegQueryInfoKeyA_CMockIgnoreArg_pulSecDescLen(__LINE__)
void LwRegQueryInfoKeyA_CMockIgnoreArg_pulSecDescLen(UNITY_LINE_TYPE cmock_line);
#define LwRegQueryInfoKeyA_IgnoreArg_pftLastWriteTime() LwRegQueryInfoKeyA_CMockIgnoreArg_pftLastWriteTime(__LINE__)
void LwRegQueryInfoKeyA_CMockIgnoreArg_pftLastWriteTime(UNITY_LINE_TYPE cmock_line);
#define LwRegQueryInfoKeyW_IgnoreAndReturn(cmock_retval) LwRegQueryInfoKeyW_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void LwRegQueryInfoKeyW_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, DWORD cmock_to_return);
#define LwRegQueryInfoKeyW_ExpectAndReturn(hRegConnection, hKey, pClass, pcClass, pReserved, pcSubKeys, pcMaxSubKeyLen, pcMaxClassLen, pcValues, pcMaxValueNameLen, pcMaxValueLen, pulSecDescLen, pftLastWriteTime, cmock_retval) LwRegQueryInfoKeyW_CMockExpectAndReturn(__LINE__, hRegConnection, hKey, pClass, pcClass, pReserved, pcSubKeys, pcMaxSubKeyLen, pcMaxClassLen, pcValues, pcMaxValueNameLen, pcMaxValueLen, pulSecDescLen, pftLastWriteTime, cmock_retval)
void LwRegQueryInfoKeyW_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, IN HANDLE hRegConnection, IN HKEY hKey, OUT PWSTR pClass, IN OUT OPTIONAL PDWORD pcClass, IN PDWORD pReserved, OUT OPTIONAL PDWORD pcSubKeys, OUT OPTIONAL PDWORD pcMaxSubKeyLen, OUT OPTIONAL PDWORD pcMaxClassLen, OUT OPTIONAL PDWORD pcValues, OUT OPTIONAL PDWORD pcMaxValueNameLen, OUT OPTIONAL PDWORD pcMaxValueLen, OUT OPTIONAL PULONG pulSecDescLen, OUT OPTIONAL PFILETIME pftLastWriteTime, DWORD cmock_to_return);
#define LwRegQueryInfoKeyW_IgnoreArg_hRegConnection() LwRegQueryInfoKeyW_CMockIgnoreArg_hRegConnection(__LINE__)
void LwRegQueryInfoKeyW_CMockIgnoreArg_hRegConnection(UNITY_LINE_TYPE cmock_line);
#define LwRegQueryInfoKeyW_IgnoreArg_hKey() LwRegQueryInfoKeyW_CMockIgnoreArg_hKey(__LINE__)
void LwRegQueryInfoKeyW_CMockIgnoreArg_hKey(UNITY_LINE_TYPE cmock_line);
#define LwRegQueryInfoKeyW_IgnoreArg_pClass() LwRegQueryInfoKeyW_CMockIgnoreArg_pClass(__LINE__)
void LwRegQueryInfoKeyW_CMockIgnoreArg_pClass(UNITY_LINE_TYPE cmock_line);
#define LwRegQueryInfoKeyW_IgnoreArg_pcClass() LwRegQueryInfoKeyW_CMockIgnoreArg_pcClass(__LINE__)
void LwRegQueryInfoKeyW_CMockIgnoreArg_pcClass(UNITY_LINE_TYPE cmock_line);
#define LwRegQueryInfoKeyW_IgnoreArg_pReserved() LwRegQueryInfoKeyW_CMockIgnoreArg_pReserved(__LINE__)
void LwRegQueryInfoKeyW_CMockIgnoreArg_pReserved(UNITY_LINE_TYPE cmock_line);
#define LwRegQueryInfoKeyW_IgnoreArg_pcSubKeys() LwRegQueryInfoKeyW_CMockIgnoreArg_pcSubKeys(__LINE__)
void LwRegQueryInfoKeyW_CMockIgnoreArg_pcSubKeys(UNITY_LINE_TYPE cmock_line);
#define LwRegQueryInfoKeyW_IgnoreArg_pcMaxSubKeyLen() LwRegQueryInfoKeyW_CMockIgnoreArg_pcMaxSubKeyLen(__LINE__)
void LwRegQueryInfoKeyW_CMockIgnoreArg_pcMaxSubKeyLen(UNITY_LINE_TYPE cmock_line);
#define LwRegQueryInfoKeyW_IgnoreArg_pcMaxClassLen() LwRegQueryInfoKeyW_CMockIgnoreArg_pcMaxClassLen(__LINE__)
void LwRegQueryInfoKeyW_CMockIgnoreArg_pcMaxClassLen(UNITY_LINE_TYPE cmock_line);
#define LwRegQueryInfoKeyW_IgnoreArg_pcValues() LwRegQueryInfoKeyW_CMockIgnoreArg_pcValues(__LINE__)
void LwRegQueryInfoKeyW_CMockIgnoreArg_pcValues(UNITY_LINE_TYPE cmock_line);
#define LwRegQueryInfoKeyW_IgnoreArg_pcMaxValueNameLen() LwRegQueryInfoKeyW_CMockIgnoreArg_pcMaxValueNameLen(__LINE__)
void LwRegQueryInfoKeyW_CMockIgnoreArg_pcMaxValueNameLen(UNITY_LINE_TYPE cmock_line);
#define LwRegQueryInfoKeyW_IgnoreArg_pcMaxValueLen() LwRegQueryInfoKeyW_CMockIgnoreArg_pcMaxValueLen(__LINE__)
void LwRegQueryInfoKeyW_CMockIgnoreArg_pcMaxValueLen(UNITY_LINE_TYPE cmock_line);
#define LwRegQueryInfoKeyW_IgnoreArg_pulSecDescLen() LwRegQueryInfoKeyW_CMockIgnoreArg_pulSecDescLen(__LINE__)
void LwRegQueryInfoKeyW_CMockIgnoreArg_pulSecDescLen(UNITY_LINE_TYPE cmock_line);
#define LwRegQueryInfoKeyW_IgnoreArg_pftLastWriteTime() LwRegQueryInfoKeyW_CMockIgnoreArg_pftLastWriteTime(__LINE__)
void LwRegQueryInfoKeyW_CMockIgnoreArg_pftLastWriteTime(UNITY_LINE_TYPE cmock_line);
#define LwRegQueryValueExA_IgnoreAndReturn(cmock_retval) LwRegQueryValueExA_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void LwRegQueryValueExA_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, DWORD cmock_to_return);
#define LwRegQueryValueExA_ExpectAndReturn(hRegConnection, hKey, pszValueName, pReserved, pType, pData, pcbData, cmock_retval) LwRegQueryValueExA_CMockExpectAndReturn(__LINE__, hRegConnection, hKey, pszValueName, pReserved, pType, pData, pcbData, cmock_retval)
void LwRegQueryValueExA_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, IN HANDLE hRegConnection, IN HKEY hKey, IN OPTIONAL PCSTR pszValueName, IN PDWORD pReserved, OUT OPTIONAL PDWORD pType, OUT OPTIONAL PBYTE pData, IN OUT OPTIONAL PDWORD pcbData, DWORD cmock_to_return);
#define LwRegQueryValueExA_IgnoreArg_hRegConnection() LwRegQueryValueExA_CMockIgnoreArg_hRegConnection(__LINE__)
void LwRegQueryValueExA_CMockIgnoreArg_hRegConnection(UNITY_LINE_TYPE cmock_line);
#define LwRegQueryValueExA_IgnoreArg_hKey() LwRegQueryValueExA_CMockIgnoreArg_hKey(__LINE__)
void LwRegQueryValueExA_CMockIgnoreArg_hKey(UNITY_LINE_TYPE cmock_line);
#define LwRegQueryValueExA_IgnoreArg_pszValueName() LwRegQueryValueExA_CMockIgnoreArg_pszValueName(__LINE__)
void LwRegQueryValueExA_CMockIgnoreArg_pszValueName(UNITY_LINE_TYPE cmock_line);
#define LwRegQueryValueExA_IgnoreArg_pReserved() LwRegQueryValueExA_CMockIgnoreArg_pReserved(__LINE__)
void LwRegQueryValueExA_CMockIgnoreArg_pReserved(UNITY_LINE_TYPE cmock_line);
#define LwRegQueryValueExA_IgnoreArg_pType() LwRegQueryValueExA_CMockIgnoreArg_pType(__LINE__)
void LwRegQueryValueExA_CMockIgnoreArg_pType(UNITY_LINE_TYPE cmock_line);
#define LwRegQueryValueExA_IgnoreArg_pData() LwRegQueryValueExA_CMockIgnoreArg_pData(__LINE__)
void LwRegQueryValueExA_CMockIgnoreArg_pData(UNITY_LINE_TYPE cmock_line);
#define LwRegQueryValueExA_IgnoreArg_pcbData() LwRegQueryValueExA_CMockIgnoreArg_pcbData(__LINE__)
void LwRegQueryValueExA_CMockIgnoreArg_pcbData(UNITY_LINE_TYPE cmock_line);
#define LwRegQueryValueExW_IgnoreAndReturn(cmock_retval) LwRegQueryValueExW_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void LwRegQueryValueExW_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, DWORD cmock_to_return);
#define LwRegQueryValueExW_ExpectAndReturn(hRegConnection, hKey, pValueName, pReserved, pType, pData, pcbData, cmock_retval) LwRegQueryValueExW_CMockExpectAndReturn(__LINE__, hRegConnection, hKey, pValueName, pReserved, pType, pData, pcbData, cmock_retval)
void LwRegQueryValueExW_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, IN HANDLE hRegConnection, IN HKEY hKey, IN OPTIONAL PCWSTR pValueName, IN PDWORD pReserved, OUT OPTIONAL PDWORD pType, OUT OPTIONAL PBYTE pData, IN OUT OPTIONAL PDWORD pcbData, DWORD cmock_to_return);
#define LwRegQueryValueExW_IgnoreArg_hRegConnection() LwRegQueryValueExW_CMockIgnoreArg_hRegConnection(__LINE__)
void LwRegQueryValueExW_CMockIgnoreArg_hRegConnection(UNITY_LINE_TYPE cmock_line);
#define LwRegQueryValueExW_IgnoreArg_hKey() LwRegQueryValueExW_CMockIgnoreArg_hKey(__LINE__)
void LwRegQueryValueExW_CMockIgnoreArg_hKey(UNITY_LINE_TYPE cmock_line);
#define LwRegQueryValueExW_IgnoreArg_pValueName() LwRegQueryValueExW_CMockIgnoreArg_pValueName(__LINE__)
void LwRegQueryValueExW_CMockIgnoreArg_pValueName(UNITY_LINE_TYPE cmock_line);
#define LwRegQueryValueExW_IgnoreArg_pReserved() LwRegQueryValueExW_CMockIgnoreArg_pReserved(__LINE__)
void LwRegQueryValueExW_CMockIgnoreArg_pReserved(UNITY_LINE_TYPE cmock_line);
#define LwRegQueryValueExW_IgnoreArg_pType() LwRegQueryValueExW_CMockIgnoreArg_pType(__LINE__)
void LwRegQueryValueExW_CMockIgnoreArg_pType(UNITY_LINE_TYPE cmock_line);
#define LwRegQueryValueExW_IgnoreArg_pData() LwRegQueryValueExW_CMockIgnoreArg_pData(__LINE__)
void LwRegQueryValueExW_CMockIgnoreArg_pData(UNITY_LINE_TYPE cmock_line);
#define LwRegQueryValueExW_IgnoreArg_pcbData() LwRegQueryValueExW_CMockIgnoreArg_pcbData(__LINE__)
void LwRegQueryValueExW_CMockIgnoreArg_pcbData(UNITY_LINE_TYPE cmock_line);
#define LwRegSetValueExA_IgnoreAndReturn(cmock_retval) LwRegSetValueExA_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void LwRegSetValueExA_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, DWORD cmock_to_return);
#define LwRegSetValueExA_ExpectAndReturn(hRegConnection, hKey, pszValueName, Reserved, dwType, pData, cbData, cmock_retval) LwRegSetValueExA_CMockExpectAndReturn(__LINE__, hRegConnection, hKey, pszValueName, Reserved, dwType, pData, cbData, cmock_retval)
void LwRegSetValueExA_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, IN HANDLE hRegConnection, IN HKEY hKey, IN OPTIONAL PCSTR pszValueName, IN DWORD Reserved, IN DWORD dwType, IN OPTIONAL const BYTE* pData, IN DWORD cbData, DWORD cmock_to_return);
#define LwRegSetValueExA_IgnoreArg_hRegConnection() LwRegSetValueExA_CMockIgnoreArg_hRegConnection(__LINE__)
void LwRegSetValueExA_CMockIgnoreArg_hRegConnection(UNITY_LINE_TYPE cmock_line);
#define LwRegSetValueExA_IgnoreArg_hKey() LwRegSetValueExA_CMockIgnoreArg_hKey(__LINE__)
void LwRegSetValueExA_CMockIgnoreArg_hKey(UNITY_LINE_TYPE cmock_line);
#define LwRegSetValueExA_IgnoreArg_pszValueName() LwRegSetValueExA_CMockIgnoreArg_pszValueName(__LINE__)
void LwRegSetValueExA_CMockIgnoreArg_pszValueName(UNITY_LINE_TYPE cmock_line);
#define LwRegSetValueExA_IgnoreArg_Reserved() LwRegSetValueExA_CMockIgnoreArg_Reserved(__LINE__)
void LwRegSetValueExA_CMockIgnoreArg_Reserved(UNITY_LINE_TYPE cmock_line);
#define LwRegSetValueExA_IgnoreArg_dwType() LwRegSetValueExA_CMockIgnoreArg_dwType(__LINE__)
void LwRegSetValueExA_CMockIgnoreArg_dwType(UNITY_LINE_TYPE cmock_line);
#define LwRegSetValueExA_IgnoreArg_pData() LwRegSetValueExA_CMockIgnoreArg_pData(__LINE__)
void LwRegSetValueExA_CMockIgnoreArg_pData(UNITY_LINE_TYPE cmock_line);
#define LwRegSetValueExA_IgnoreArg_cbData() LwRegSetValueExA_CMockIgnoreArg_cbData(__LINE__)
void LwRegSetValueExA_CMockIgnoreArg_cbData(UNITY_LINE_TYPE cmock_line);
#define LwRegSetValueExW_IgnoreAndReturn(cmock_retval) LwRegSetValueExW_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void LwRegSetValueExW_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, DWORD cmock_to_return);
#define LwRegSetValueExW_ExpectAndReturn(hRegConnection, hKey, pValueName, Reserved, dwType, pData, cbData, cmock_retval) LwRegSetValueExW_CMockExpectAndReturn(__LINE__, hRegConnection, hKey, pValueName, Reserved, dwType, pData, cbData, cmock_retval)
void LwRegSetValueExW_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, IN HANDLE hRegConnection, IN HKEY hKey, IN OPTIONAL PCWSTR pValueName, IN DWORD Reserved, IN DWORD dwType, IN OPTIONAL const BYTE* pData, IN DWORD cbData, DWORD cmock_to_return);
#define LwRegSetValueExW_IgnoreArg_hRegConnection() LwRegSetValueExW_CMockIgnoreArg_hRegConnection(__LINE__)
void LwRegSetValueExW_CMockIgnoreArg_hRegConnection(UNITY_LINE_TYPE cmock_line);
#define LwRegSetValueExW_IgnoreArg_hKey() LwRegSetValueExW_CMockIgnoreArg_hKey(__LINE__)
void LwRegSetValueExW_CMockIgnoreArg_hKey(UNITY_LINE_TYPE cmock_line);
#define LwRegSetValueExW_IgnoreArg_pValueName() LwRegSetValueExW_CMockIgnoreArg_pValueName(__LINE__)
void LwRegSetValueExW_CMockIgnoreArg_pValueName(UNITY_LINE_TYPE cmock_line);
#define LwRegSetValueExW_IgnoreArg_Reserved() LwRegSetValueExW_CMockIgnoreArg_Reserved(__LINE__)
void LwRegSetValueExW_CMockIgnoreArg_Reserved(UNITY_LINE_TYPE cmock_line);
#define LwRegSetValueExW_IgnoreArg_dwType() LwRegSetValueExW_CMockIgnoreArg_dwType(__LINE__)
void LwRegSetValueExW_CMockIgnoreArg_dwType(UNITY_LINE_TYPE cmock_line);
#define LwRegSetValueExW_IgnoreArg_pData() LwRegSetValueExW_CMockIgnoreArg_pData(__LINE__)
void LwRegSetValueExW_CMockIgnoreArg_pData(UNITY_LINE_TYPE cmock_line);
#define LwRegSetValueExW_IgnoreArg_cbData() LwRegSetValueExW_CMockIgnoreArg_cbData(__LINE__)
void LwRegSetValueExW_CMockIgnoreArg_cbData(UNITY_LINE_TYPE cmock_line);
#define LwRegQueryMultipleValues_IgnoreAndReturn(cmock_retval) LwRegQueryMultipleValues_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void LwRegQueryMultipleValues_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, DWORD cmock_to_return);
#define LwRegQueryMultipleValues_ExpectAndReturn(hRegConnection, hKey, val_list, num_vals, pValueBuf, dwTotsize, cmock_retval) LwRegQueryMultipleValues_CMockExpectAndReturn(__LINE__, hRegConnection, hKey, val_list, num_vals, pValueBuf, dwTotsize, cmock_retval)
void LwRegQueryMultipleValues_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, IN HANDLE hRegConnection, IN HKEY hKey, OUT PVALENT val_list, IN DWORD num_vals, OUT OPTIONAL PWSTR pValueBuf, IN OUT OPTIONAL PDWORD dwTotsize, DWORD cmock_to_return);
#define LwRegQueryMultipleValues_IgnoreArg_hRegConnection() LwRegQueryMultipleValues_CMockIgnoreArg_hRegConnection(__LINE__)
void LwRegQueryMultipleValues_CMockIgnoreArg_hRegConnection(UNITY_LINE_TYPE cmock_line);
#define LwRegQueryMultipleValues_IgnoreArg_hKey() LwRegQueryMultipleValues_CMockIgnoreArg_hKey(__LINE__)
void LwRegQueryMultipleValues_CMockIgnoreArg_hKey(UNITY_LINE_TYPE cmock_line);
#define LwRegQueryMultipleValues_IgnoreArg_val_list() LwRegQueryMultipleValues_CMockIgnoreArg_val_list(__LINE__)
void LwRegQueryMultipleValues_CMockIgnoreArg_val_list(UNITY_LINE_TYPE cmock_line);
#define LwRegQueryMultipleValues_IgnoreArg_num_vals() LwRegQueryMultipleValues_CMockIgnoreArg_num_vals(__LINE__)
void LwRegQueryMultipleValues_CMockIgnoreArg_num_vals(UNITY_LINE_TYPE cmock_line);
#define LwRegQueryMultipleValues_IgnoreArg_pValueBuf() LwRegQueryMultipleValues_CMockIgnoreArg_pValueBuf(__LINE__)
void LwRegQueryMultipleValues_CMockIgnoreArg_pValueBuf(UNITY_LINE_TYPE cmock_line);
#define LwRegQueryMultipleValues_IgnoreArg_dwTotsize() LwRegQueryMultipleValues_CMockIgnoreArg_dwTotsize(__LINE__)
void LwRegQueryMultipleValues_CMockIgnoreArg_dwTotsize(UNITY_LINE_TYPE cmock_line);
#define LwRegMultiStrsToByteArrayW_IgnoreAndReturn(cmock_retval) LwRegMultiStrsToByteArrayW_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void LwRegMultiStrsToByteArrayW_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, DWORD cmock_to_return);
#define LwRegMultiStrsToByteArrayW_ExpectAndReturn(ppwszInMultiSz, ppOutBuf, pOutBufLen, cmock_retval) LwRegMultiStrsToByteArrayW_CMockExpectAndReturn(__LINE__, ppwszInMultiSz, ppOutBuf, pOutBufLen, cmock_retval)
void LwRegMultiStrsToByteArrayW_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, IN PWSTR* ppwszInMultiSz, OUT PBYTE* ppOutBuf, OUT SSIZE_T* pOutBufLen, DWORD cmock_to_return);
#define LwRegMultiStrsToByteArrayW_ReturnThruPtr_ppwszInMultiSz(ppwszInMultiSz) LwRegMultiStrsToByteArrayW_CMockReturnMemThruPtr_ppwszInMultiSz(__LINE__, ppwszInMultiSz, sizeof(*ppwszInMultiSz))
#define LwRegMultiStrsToByteArrayW_ReturnArrayThruPtr_ppwszInMultiSz(ppwszInMultiSz, cmock_len) LwRegMultiStrsToByteArrayW_CMockReturnMemThruPtr_ppwszInMultiSz(__LINE__, ppwszInMultiSz, (int)(cmock_len * (int)sizeof(*ppwszInMultiSz)))
#define LwRegMultiStrsToByteArrayW_ReturnMemThruPtr_ppwszInMultiSz(ppwszInMultiSz, cmock_size) LwRegMultiStrsToByteArrayW_CMockReturnMemThruPtr_ppwszInMultiSz(__LINE__, ppwszInMultiSz, cmock_size)
void LwRegMultiStrsToByteArrayW_CMockReturnMemThruPtr_ppwszInMultiSz(UNITY_LINE_TYPE cmock_line, IN PWSTR* ppwszInMultiSz, int cmock_size);
#define LwRegMultiStrsToByteArrayW_ReturnThruPtr_ppOutBuf(ppOutBuf) LwRegMultiStrsToByteArrayW_CMockReturnMemThruPtr_ppOutBuf(__LINE__, ppOutBuf, sizeof(*ppOutBuf))
#define LwRegMultiStrsToByteArrayW_ReturnArrayThruPtr_ppOutBuf(ppOutBuf, cmock_len) LwRegMultiStrsToByteArrayW_CMockReturnMemThruPtr_ppOutBuf(__LINE__, ppOutBuf, (int)(cmock_len * (int)sizeof(*ppOutBuf)))
#define LwRegMultiStrsToByteArrayW_ReturnMemThruPtr_ppOutBuf(ppOutBuf, cmock_size) LwRegMultiStrsToByteArrayW_CMockReturnMemThruPtr_ppOutBuf(__LINE__, ppOutBuf, cmock_size)
void LwRegMultiStrsToByteArrayW_CMockReturnMemThruPtr_ppOutBuf(UNITY_LINE_TYPE cmock_line, OUT PBYTE* ppOutBuf, int cmock_size);
#define LwRegMultiStrsToByteArrayW_ReturnThruPtr_pOutBufLen(pOutBufLen) LwRegMultiStrsToByteArrayW_CMockReturnMemThruPtr_pOutBufLen(__LINE__, pOutBufLen, sizeof(*pOutBufLen))
#define LwRegMultiStrsToByteArrayW_ReturnArrayThruPtr_pOutBufLen(pOutBufLen, cmock_len) LwRegMultiStrsToByteArrayW_CMockReturnMemThruPtr_pOutBufLen(__LINE__, pOutBufLen, (int)(cmock_len * (int)sizeof(*pOutBufLen)))
#define LwRegMultiStrsToByteArrayW_ReturnMemThruPtr_pOutBufLen(pOutBufLen, cmock_size) LwRegMultiStrsToByteArrayW_CMockReturnMemThruPtr_pOutBufLen(__LINE__, pOutBufLen, cmock_size)
void LwRegMultiStrsToByteArrayW_CMockReturnMemThruPtr_pOutBufLen(UNITY_LINE_TYPE cmock_line, OUT SSIZE_T* pOutBufLen, int cmock_size);
#define LwRegMultiStrsToByteArrayW_IgnoreArg_ppwszInMultiSz() LwRegMultiStrsToByteArrayW_CMockIgnoreArg_ppwszInMultiSz(__LINE__)
void LwRegMultiStrsToByteArrayW_CMockIgnoreArg_ppwszInMultiSz(UNITY_LINE_TYPE cmock_line);
#define LwRegMultiStrsToByteArrayW_IgnoreArg_ppOutBuf() LwRegMultiStrsToByteArrayW_CMockIgnoreArg_ppOutBuf(__LINE__)
void LwRegMultiStrsToByteArrayW_CMockIgnoreArg_ppOutBuf(UNITY_LINE_TYPE cmock_line);
#define LwRegMultiStrsToByteArrayW_IgnoreArg_pOutBufLen() LwRegMultiStrsToByteArrayW_CMockIgnoreArg_pOutBufLen(__LINE__)
void LwRegMultiStrsToByteArrayW_CMockIgnoreArg_pOutBufLen(UNITY_LINE_TYPE cmock_line);
#define LwRegMultiStrsToByteArrayA_IgnoreAndReturn(cmock_retval) LwRegMultiStrsToByteArrayA_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void LwRegMultiStrsToByteArrayA_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, DWORD cmock_to_return);
#define LwRegMultiStrsToByteArrayA_ExpectAndReturn(ppszInMultiSz, ppOutBuf, pOutBufLen, cmock_retval) LwRegMultiStrsToByteArrayA_CMockExpectAndReturn(__LINE__, ppszInMultiSz, ppOutBuf, pOutBufLen, cmock_retval)
void LwRegMultiStrsToByteArrayA_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, IN PSTR* ppszInMultiSz, OUT PBYTE* ppOutBuf, OUT SSIZE_T* pOutBufLen, DWORD cmock_to_return);
#define LwRegMultiStrsToByteArrayA_ReturnThruPtr_ppszInMultiSz(ppszInMultiSz) LwRegMultiStrsToByteArrayA_CMockReturnMemThruPtr_ppszInMultiSz(__LINE__, ppszInMultiSz, sizeof(*ppszInMultiSz))
#define LwRegMultiStrsToByteArrayA_ReturnArrayThruPtr_ppszInMultiSz(ppszInMultiSz, cmock_len) LwRegMultiStrsToByteArrayA_CMockReturnMemThruPtr_ppszInMultiSz(__LINE__, ppszInMultiSz, (int)(cmock_len * (int)sizeof(*ppszInMultiSz)))
#define LwRegMultiStrsToByteArrayA_ReturnMemThruPtr_ppszInMultiSz(ppszInMultiSz, cmock_size) LwRegMultiStrsToByteArrayA_CMockReturnMemThruPtr_ppszInMultiSz(__LINE__, ppszInMultiSz, cmock_size)
void LwRegMultiStrsToByteArrayA_CMockReturnMemThruPtr_ppszInMultiSz(UNITY_LINE_TYPE cmock_line, IN PSTR* ppszInMultiSz, int cmock_size);
#define LwRegMultiStrsToByteArrayA_ReturnThruPtr_ppOutBuf(ppOutBuf) LwRegMultiStrsToByteArrayA_CMockReturnMemThruPtr_ppOutBuf(__LINE__, ppOutBuf, sizeof(*ppOutBuf))
#define LwRegMultiStrsToByteArrayA_ReturnArrayThruPtr_ppOutBuf(ppOutBuf, cmock_len) LwRegMultiStrsToByteArrayA_CMockReturnMemThruPtr_ppOutBuf(__LINE__, ppOutBuf, (int)(cmock_len * (int)sizeof(*ppOutBuf)))
#define LwRegMultiStrsToByteArrayA_ReturnMemThruPtr_ppOutBuf(ppOutBuf, cmock_size) LwRegMultiStrsToByteArrayA_CMockReturnMemThruPtr_ppOutBuf(__LINE__, ppOutBuf, cmock_size)
void LwRegMultiStrsToByteArrayA_CMockReturnMemThruPtr_ppOutBuf(UNITY_LINE_TYPE cmock_line, OUT PBYTE* ppOutBuf, int cmock_size);
#define LwRegMultiStrsToByteArrayA_ReturnThruPtr_pOutBufLen(pOutBufLen) LwRegMultiStrsToByteArrayA_CMockReturnMemThruPtr_pOutBufLen(__LINE__, pOutBufLen, sizeof(*pOutBufLen))
#define LwRegMultiStrsToByteArrayA_ReturnArrayThruPtr_pOutBufLen(pOutBufLen, cmock_len) LwRegMultiStrsToByteArrayA_CMockReturnMemThruPtr_pOutBufLen(__LINE__, pOutBufLen, (int)(cmock_len * (int)sizeof(*pOutBufLen)))
#define LwRegMultiStrsToByteArrayA_ReturnMemThruPtr_pOutBufLen(pOutBufLen, cmock_size) LwRegMultiStrsToByteArrayA_CMockReturnMemThruPtr_pOutBufLen(__LINE__, pOutBufLen, cmock_size)
void LwRegMultiStrsToByteArrayA_CMockReturnMemThruPtr_pOutBufLen(UNITY_LINE_TYPE cmock_line, OUT SSIZE_T* pOutBufLen, int cmock_size);
#define LwRegMultiStrsToByteArrayA_IgnoreArg_ppszInMultiSz() LwRegMultiStrsToByteArrayA_CMockIgnoreArg_ppszInMultiSz(__LINE__)
void LwRegMultiStrsToByteArrayA_CMockIgnoreArg_ppszInMultiSz(UNITY_LINE_TYPE cmock_line);
#define LwRegMultiStrsToByteArrayA_IgnoreArg_ppOutBuf() LwRegMultiStrsToByteArrayA_CMockIgnoreArg_ppOutBuf(__LINE__)
void LwRegMultiStrsToByteArrayA_CMockIgnoreArg_ppOutBuf(UNITY_LINE_TYPE cmock_line);
#define LwRegMultiStrsToByteArrayA_IgnoreArg_pOutBufLen() LwRegMultiStrsToByteArrayA_CMockIgnoreArg_pOutBufLen(__LINE__)
void LwRegMultiStrsToByteArrayA_CMockIgnoreArg_pOutBufLen(UNITY_LINE_TYPE cmock_line);
#define LwRegByteArrayToMultiStrsW_IgnoreAndReturn(cmock_retval) LwRegByteArrayToMultiStrsW_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void LwRegByteArrayToMultiStrsW_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, DWORD cmock_to_return);
#define LwRegByteArrayToMultiStrsW_ExpectAndReturn(pInBuf, bufLen, pppwszStrings, cmock_retval) LwRegByteArrayToMultiStrsW_CMockExpectAndReturn(__LINE__, pInBuf, bufLen, pppwszStrings, cmock_retval)
void LwRegByteArrayToMultiStrsW_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, IN PBYTE pInBuf, IN SSIZE_T bufLen, OUT PWSTR** pppwszStrings, DWORD cmock_to_return);
#define LwRegByteArrayToMultiStrsW_ReturnThruPtr_pppwszStrings(pppwszStrings) LwRegByteArrayToMultiStrsW_CMockReturnMemThruPtr_pppwszStrings(__LINE__, pppwszStrings, sizeof(*pppwszStrings))
#define LwRegByteArrayToMultiStrsW_ReturnArrayThruPtr_pppwszStrings(pppwszStrings, cmock_len) LwRegByteArrayToMultiStrsW_CMockReturnMemThruPtr_pppwszStrings(__LINE__, pppwszStrings, (int)(cmock_len * (int)sizeof(*pppwszStrings)))
#define LwRegByteArrayToMultiStrsW_ReturnMemThruPtr_pppwszStrings(pppwszStrings, cmock_size) LwRegByteArrayToMultiStrsW_CMockReturnMemThruPtr_pppwszStrings(__LINE__, pppwszStrings, cmock_size)
void LwRegByteArrayToMultiStrsW_CMockReturnMemThruPtr_pppwszStrings(UNITY_LINE_TYPE cmock_line, OUT PWSTR** pppwszStrings, int cmock_size);
#define LwRegByteArrayToMultiStrsW_IgnoreArg_pInBuf() LwRegByteArrayToMultiStrsW_CMockIgnoreArg_pInBuf(__LINE__)
void LwRegByteArrayToMultiStrsW_CMockIgnoreArg_pInBuf(UNITY_LINE_TYPE cmock_line);
#define LwRegByteArrayToMultiStrsW_IgnoreArg_bufLen() LwRegByteArrayToMultiStrsW_CMockIgnoreArg_bufLen(__LINE__)
void LwRegByteArrayToMultiStrsW_CMockIgnoreArg_bufLen(UNITY_LINE_TYPE cmock_line);
#define LwRegByteArrayToMultiStrsW_IgnoreArg_pppwszStrings() LwRegByteArrayToMultiStrsW_CMockIgnoreArg_pppwszStrings(__LINE__)
void LwRegByteArrayToMultiStrsW_CMockIgnoreArg_pppwszStrings(UNITY_LINE_TYPE cmock_line);
#define LwRegByteArrayToMultiStrsA_IgnoreAndReturn(cmock_retval) LwRegByteArrayToMultiStrsA_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void LwRegByteArrayToMultiStrsA_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, DWORD cmock_to_return);
#define LwRegByteArrayToMultiStrsA_ExpectAndReturn(pInBuf, bufLen, pppszStrings, cmock_retval) LwRegByteArrayToMultiStrsA_CMockExpectAndReturn(__LINE__, pInBuf, bufLen, pppszStrings, cmock_retval)
void LwRegByteArrayToMultiStrsA_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, IN PBYTE pInBuf, IN SSIZE_T bufLen, OUT PSTR** pppszStrings, DWORD cmock_to_return);
#define LwRegByteArrayToMultiStrsA_ReturnThruPtr_pppszStrings(pppszStrings) LwRegByteArrayToMultiStrsA_CMockReturnMemThruPtr_pppszStrings(__LINE__, pppszStrings, sizeof(*pppszStrings))
#define LwRegByteArrayToMultiStrsA_ReturnArrayThruPtr_pppszStrings(pppszStrings, cmock_len) LwRegByteArrayToMultiStrsA_CMockReturnMemThruPtr_pppszStrings(__LINE__, pppszStrings, (int)(cmock_len * (int)sizeof(*pppszStrings)))
#define LwRegByteArrayToMultiStrsA_ReturnMemThruPtr_pppszStrings(pppszStrings, cmock_size) LwRegByteArrayToMultiStrsA_CMockReturnMemThruPtr_pppszStrings(__LINE__, pppszStrings, cmock_size)
void LwRegByteArrayToMultiStrsA_CMockReturnMemThruPtr_pppszStrings(UNITY_LINE_TYPE cmock_line, OUT PSTR** pppszStrings, int cmock_size);
#define LwRegByteArrayToMultiStrsA_IgnoreArg_pInBuf() LwRegByteArrayToMultiStrsA_CMockIgnoreArg_pInBuf(__LINE__)
void LwRegByteArrayToMultiStrsA_CMockIgnoreArg_pInBuf(UNITY_LINE_TYPE cmock_line);
#define LwRegByteArrayToMultiStrsA_IgnoreArg_bufLen() LwRegByteArrayToMultiStrsA_CMockIgnoreArg_bufLen(__LINE__)
void LwRegByteArrayToMultiStrsA_CMockIgnoreArg_bufLen(UNITY_LINE_TYPE cmock_line);
#define LwRegByteArrayToMultiStrsA_IgnoreArg_pppszStrings() LwRegByteArrayToMultiStrsA_CMockIgnoreArg_pppszStrings(__LINE__)
void LwRegByteArrayToMultiStrsA_CMockIgnoreArg_pppszStrings(UNITY_LINE_TYPE cmock_line);
#define LwRegConvertByteStreamA2W_IgnoreAndReturn(cmock_retval) LwRegConvertByteStreamA2W_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void LwRegConvertByteStreamA2W_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, DWORD cmock_to_return);
#define LwRegConvertByteStreamA2W_ExpectAndReturn(pData, cbData, ppOutData, pcbOutDataLen, cmock_retval) LwRegConvertByteStreamA2W_CMockExpectAndReturn(__LINE__, pData, cbData, ppOutData, pcbOutDataLen, cmock_retval)
void LwRegConvertByteStreamA2W_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, IN const PBYTE pData, IN DWORD cbData, OUT PBYTE* ppOutData, OUT PDWORD pcbOutDataLen, DWORD cmock_to_return);
#define LwRegConvertByteStreamA2W_ReturnThruPtr_ppOutData(ppOutData) LwRegConvertByteStreamA2W_CMockReturnMemThruPtr_ppOutData(__LINE__, ppOutData, sizeof(*ppOutData))
#define LwRegConvertByteStreamA2W_ReturnArrayThruPtr_ppOutData(ppOutData, cmock_len) LwRegConvertByteStreamA2W_CMockReturnMemThruPtr_ppOutData(__LINE__, ppOutData, (int)(cmock_len * (int)sizeof(*ppOutData)))
#define LwRegConvertByteStreamA2W_ReturnMemThruPtr_ppOutData(ppOutData, cmock_size) LwRegConvertByteStreamA2W_CMockReturnMemThruPtr_ppOutData(__LINE__, ppOutData, cmock_size)
void LwRegConvertByteStreamA2W_CMockReturnMemThruPtr_ppOutData(UNITY_LINE_TYPE cmock_line, OUT PBYTE* ppOutData, int cmock_size);
#define LwRegConvertByteStreamA2W_IgnoreArg_pData() LwRegConvertByteStreamA2W_CMockIgnoreArg_pData(__LINE__)
void LwRegConvertByteStreamA2W_CMockIgnoreArg_pData(UNITY_LINE_TYPE cmock_line);
#define LwRegConvertByteStreamA2W_IgnoreArg_cbData() LwRegConvertByteStreamA2W_CMockIgnoreArg_cbData(__LINE__)
void LwRegConvertByteStreamA2W_CMockIgnoreArg_cbData(UNITY_LINE_TYPE cmock_line);
#define LwRegConvertByteStreamA2W_IgnoreArg_ppOutData() LwRegConvertByteStreamA2W_CMockIgnoreArg_ppOutData(__LINE__)
void LwRegConvertByteStreamA2W_CMockIgnoreArg_ppOutData(UNITY_LINE_TYPE cmock_line);
#define LwRegConvertByteStreamA2W_IgnoreArg_pcbOutDataLen() LwRegConvertByteStreamA2W_CMockIgnoreArg_pcbOutDataLen(__LINE__)
void LwRegConvertByteStreamA2W_CMockIgnoreArg_pcbOutDataLen(UNITY_LINE_TYPE cmock_line);
#define LwRegConvertByteStreamW2A_IgnoreAndReturn(cmock_retval) LwRegConvertByteStreamW2A_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void LwRegConvertByteStreamW2A_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, DWORD cmock_to_return);
#define LwRegConvertByteStreamW2A_ExpectAndReturn(pData, cbData, ppOutData, pcbOutDataLen, cmock_retval) LwRegConvertByteStreamW2A_CMockExpectAndReturn(__LINE__, pData, cbData, ppOutData, pcbOutDataLen, cmock_retval)
void LwRegConvertByteStreamW2A_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, IN const PBYTE pData, IN DWORD cbData, OUT PBYTE* ppOutData, OUT PDWORD pcbOutDataLen, DWORD cmock_to_return);
#define LwRegConvertByteStreamW2A_ReturnThruPtr_ppOutData(ppOutData) LwRegConvertByteStreamW2A_CMockReturnMemThruPtr_ppOutData(__LINE__, ppOutData, sizeof(*ppOutData))
#define LwRegConvertByteStreamW2A_ReturnArrayThruPtr_ppOutData(ppOutData, cmock_len) LwRegConvertByteStreamW2A_CMockReturnMemThruPtr_ppOutData(__LINE__, ppOutData, (int)(cmock_len * (int)sizeof(*ppOutData)))
#define LwRegConvertByteStreamW2A_ReturnMemThruPtr_ppOutData(ppOutData, cmock_size) LwRegConvertByteStreamW2A_CMockReturnMemThruPtr_ppOutData(__LINE__, ppOutData, cmock_size)
void LwRegConvertByteStreamW2A_CMockReturnMemThruPtr_ppOutData(UNITY_LINE_TYPE cmock_line, OUT PBYTE* ppOutData, int cmock_size);
#define LwRegConvertByteStreamW2A_IgnoreArg_pData() LwRegConvertByteStreamW2A_CMockIgnoreArg_pData(__LINE__)
void LwRegConvertByteStreamW2A_CMockIgnoreArg_pData(UNITY_LINE_TYPE cmock_line);
#define LwRegConvertByteStreamW2A_IgnoreArg_cbData() LwRegConvertByteStreamW2A_CMockIgnoreArg_cbData(__LINE__)
void LwRegConvertByteStreamW2A_CMockIgnoreArg_cbData(UNITY_LINE_TYPE cmock_line);
#define LwRegConvertByteStreamW2A_IgnoreArg_ppOutData() LwRegConvertByteStreamW2A_CMockIgnoreArg_ppOutData(__LINE__)
void LwRegConvertByteStreamW2A_CMockIgnoreArg_ppOutData(UNITY_LINE_TYPE cmock_line);
#define LwRegConvertByteStreamW2A_IgnoreArg_pcbOutDataLen() LwRegConvertByteStreamW2A_CMockIgnoreArg_pcbOutDataLen(__LINE__)
void LwRegConvertByteStreamW2A_CMockIgnoreArg_pcbOutDataLen(UNITY_LINE_TYPE cmock_line);
#define LwRegSetKeySecurity_IgnoreAndReturn(cmock_retval) LwRegSetKeySecurity_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void LwRegSetKeySecurity_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, DWORD cmock_to_return);
#define LwRegSetKeySecurity_ExpectAndReturn(hRegConnection, hKey, SecurityInformation, SecurityDescriptor, Length, cmock_retval) LwRegSetKeySecurity_CMockExpectAndReturn(__LINE__, hRegConnection, hKey, SecurityInformation, SecurityDescriptor, Length, cmock_retval)
void LwRegSetKeySecurity_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, IN HANDLE hRegConnection, IN HKEY hKey, IN SECURITY_INFORMATION SecurityInformation, IN PSECURITY_DESCRIPTOR_RELATIVE SecurityDescriptor, IN ULONG Length, DWORD cmock_to_return);
#define LwRegSetKeySecurity_IgnoreArg_hRegConnection() LwRegSetKeySecurity_CMockIgnoreArg_hRegConnection(__LINE__)
void LwRegSetKeySecurity_CMockIgnoreArg_hRegConnection(UNITY_LINE_TYPE cmock_line);
#define LwRegSetKeySecurity_IgnoreArg_hKey() LwRegSetKeySecurity_CMockIgnoreArg_hKey(__LINE__)
void LwRegSetKeySecurity_CMockIgnoreArg_hKey(UNITY_LINE_TYPE cmock_line);
#define LwRegSetKeySecurity_IgnoreArg_SecurityInformation() LwRegSetKeySecurity_CMockIgnoreArg_SecurityInformation(__LINE__)
void LwRegSetKeySecurity_CMockIgnoreArg_SecurityInformation(UNITY_LINE_TYPE cmock_line);
#define LwRegSetKeySecurity_IgnoreArg_SecurityDescriptor() LwRegSetKeySecurity_CMockIgnoreArg_SecurityDescriptor(__LINE__)
void LwRegSetKeySecurity_CMockIgnoreArg_SecurityDescriptor(UNITY_LINE_TYPE cmock_line);
#define LwRegSetKeySecurity_IgnoreArg_Length() LwRegSetKeySecurity_CMockIgnoreArg_Length(__LINE__)
void LwRegSetKeySecurity_CMockIgnoreArg_Length(UNITY_LINE_TYPE cmock_line);
#define LwRegGetKeySecurity_IgnoreAndReturn(cmock_retval) LwRegGetKeySecurity_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void LwRegGetKeySecurity_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, DWORD cmock_to_return);
#define LwRegGetKeySecurity_ExpectAndReturn(hRegConnection, hKey, SecurityInformation, SecurityDescriptor, lpcbSecurityDescriptor, cmock_retval) LwRegGetKeySecurity_CMockExpectAndReturn(__LINE__, hRegConnection, hKey, SecurityInformation, SecurityDescriptor, lpcbSecurityDescriptor, cmock_retval)
void LwRegGetKeySecurity_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, IN HANDLE hRegConnection, IN HKEY hKey, IN SECURITY_INFORMATION SecurityInformation, OUT OPTIONAL PSECURITY_DESCRIPTOR_RELATIVE SecurityDescriptor, IN OUT PULONG lpcbSecurityDescriptor, DWORD cmock_to_return);
#define LwRegGetKeySecurity_IgnoreArg_hRegConnection() LwRegGetKeySecurity_CMockIgnoreArg_hRegConnection(__LINE__)
void LwRegGetKeySecurity_CMockIgnoreArg_hRegConnection(UNITY_LINE_TYPE cmock_line);
#define LwRegGetKeySecurity_IgnoreArg_hKey() LwRegGetKeySecurity_CMockIgnoreArg_hKey(__LINE__)
void LwRegGetKeySecurity_CMockIgnoreArg_hKey(UNITY_LINE_TYPE cmock_line);
#define LwRegGetKeySecurity_IgnoreArg_SecurityInformation() LwRegGetKeySecurity_CMockIgnoreArg_SecurityInformation(__LINE__)
void LwRegGetKeySecurity_CMockIgnoreArg_SecurityInformation(UNITY_LINE_TYPE cmock_line);
#define LwRegGetKeySecurity_IgnoreArg_SecurityDescriptor() LwRegGetKeySecurity_CMockIgnoreArg_SecurityDescriptor(__LINE__)
void LwRegGetKeySecurity_CMockIgnoreArg_SecurityDescriptor(UNITY_LINE_TYPE cmock_line);
#define LwRegGetKeySecurity_IgnoreArg_lpcbSecurityDescriptor() LwRegGetKeySecurity_CMockIgnoreArg_lpcbSecurityDescriptor(__LINE__)
void LwRegGetKeySecurity_CMockIgnoreArg_lpcbSecurityDescriptor(UNITY_LINE_TYPE cmock_line);
#define LwRegFindHintByName_IgnoreAndReturn(cmock_retval) LwRegFindHintByName_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void LwRegFindHintByName_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, DWORD cmock_to_return);
#define LwRegFindHintByName_ExpectAndReturn(pszHint, cmock_retval) LwRegFindHintByName_CMockExpectAndReturn(__LINE__, pszHint, cmock_retval)
void LwRegFindHintByName_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, PSTR pszHint, DWORD cmock_to_return);
#define LwRegFindHintByName_IgnoreArg_pszHint() LwRegFindHintByName_CMockIgnoreArg_pszHint(__LINE__)
void LwRegFindHintByName_CMockIgnoreArg_pszHint(UNITY_LINE_TYPE cmock_line);
#define LwRegFindHintByValue_IgnoreAndReturn(cmock_retval) LwRegFindHintByValue_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void LwRegFindHintByValue_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, PSTR cmock_to_return);
#define LwRegFindHintByValue_ExpectAndReturn(dwHint, cmock_retval) LwRegFindHintByValue_CMockExpectAndReturn(__LINE__, dwHint, cmock_retval)
void LwRegFindHintByValue_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, DWORD dwHint, PSTR cmock_to_return);
#define LwRegFindHintByValue_IgnoreArg_dwHint() LwRegFindHintByValue_CMockIgnoreArg_dwHint(__LINE__)
void LwRegFindHintByValue_CMockIgnoreArg_dwHint(UNITY_LINE_TYPE cmock_line);
#define LwRegSetValueAttributesA_IgnoreAndReturn(cmock_retval) LwRegSetValueAttributesA_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void LwRegSetValueAttributesA_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, DWORD cmock_to_return);
#define LwRegSetValueAttributesA_ExpectAndReturn(hRegConnection, hKey, pszSubKey, pszValueName, pValueAttributes, cmock_retval) LwRegSetValueAttributesA_CMockExpectAndReturn(__LINE__, hRegConnection, hKey, pszSubKey, pszValueName, pValueAttributes, cmock_retval)
void LwRegSetValueAttributesA_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, IN HANDLE hRegConnection, IN HKEY hKey, IN OPTIONAL PCSTR pszSubKey, IN PCSTR pszValueName, IN PLWREG_VALUE_ATTRIBUTES_A pValueAttributes, DWORD cmock_to_return);
#define LwRegSetValueAttributesA_IgnoreArg_hRegConnection() LwRegSetValueAttributesA_CMockIgnoreArg_hRegConnection(__LINE__)
void LwRegSetValueAttributesA_CMockIgnoreArg_hRegConnection(UNITY_LINE_TYPE cmock_line);
#define LwRegSetValueAttributesA_IgnoreArg_hKey() LwRegSetValueAttributesA_CMockIgnoreArg_hKey(__LINE__)
void LwRegSetValueAttributesA_CMockIgnoreArg_hKey(UNITY_LINE_TYPE cmock_line);
#define LwRegSetValueAttributesA_IgnoreArg_pszSubKey() LwRegSetValueAttributesA_CMockIgnoreArg_pszSubKey(__LINE__)
void LwRegSetValueAttributesA_CMockIgnoreArg_pszSubKey(UNITY_LINE_TYPE cmock_line);
#define LwRegSetValueAttributesA_IgnoreArg_pszValueName() LwRegSetValueAttributesA_CMockIgnoreArg_pszValueName(__LINE__)
void LwRegSetValueAttributesA_CMockIgnoreArg_pszValueName(UNITY_LINE_TYPE cmock_line);
#define LwRegSetValueAttributesA_IgnoreArg_pValueAttributes() LwRegSetValueAttributesA_CMockIgnoreArg_pValueAttributes(__LINE__)
void LwRegSetValueAttributesA_CMockIgnoreArg_pValueAttributes(UNITY_LINE_TYPE cmock_line);
#define LwRegSetValueAttributesW_IgnoreAndReturn(cmock_retval) LwRegSetValueAttributesW_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void LwRegSetValueAttributesW_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, DWORD cmock_to_return);
#define LwRegSetValueAttributesW_ExpectAndReturn(hRegConnection, hKey, pSubKey, pValueName, pValueAttributes, cmock_retval) LwRegSetValueAttributesW_CMockExpectAndReturn(__LINE__, hRegConnection, hKey, pSubKey, pValueName, pValueAttributes, cmock_retval)
void LwRegSetValueAttributesW_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, IN HANDLE hRegConnection, IN HKEY hKey, IN OPTIONAL PCWSTR pSubKey, IN PCWSTR pValueName, IN PLWREG_VALUE_ATTRIBUTES pValueAttributes, DWORD cmock_to_return);
#define LwRegSetValueAttributesW_IgnoreArg_hRegConnection() LwRegSetValueAttributesW_CMockIgnoreArg_hRegConnection(__LINE__)
void LwRegSetValueAttributesW_CMockIgnoreArg_hRegConnection(UNITY_LINE_TYPE cmock_line);
#define LwRegSetValueAttributesW_IgnoreArg_hKey() LwRegSetValueAttributesW_CMockIgnoreArg_hKey(__LINE__)
void LwRegSetValueAttributesW_CMockIgnoreArg_hKey(UNITY_LINE_TYPE cmock_line);
#define LwRegSetValueAttributesW_IgnoreArg_pSubKey() LwRegSetValueAttributesW_CMockIgnoreArg_pSubKey(__LINE__)
void LwRegSetValueAttributesW_CMockIgnoreArg_pSubKey(UNITY_LINE_TYPE cmock_line);
#define LwRegSetValueAttributesW_IgnoreArg_pValueName() LwRegSetValueAttributesW_CMockIgnoreArg_pValueName(__LINE__)
void LwRegSetValueAttributesW_CMockIgnoreArg_pValueName(UNITY_LINE_TYPE cmock_line);
#define LwRegSetValueAttributesW_IgnoreArg_pValueAttributes() LwRegSetValueAttributesW_CMockIgnoreArg_pValueAttributes(__LINE__)
void LwRegSetValueAttributesW_CMockIgnoreArg_pValueAttributes(UNITY_LINE_TYPE cmock_line);
#define LwRegGetValueAttributesA_IgnoreAndReturn(cmock_retval) LwRegGetValueAttributesA_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void LwRegGetValueAttributesA_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, DWORD cmock_to_return);
#define LwRegGetValueAttributesA_ExpectAndReturn(hRegConnection, hKey, pszSubKey, pszValueName, ppCurrentValue, ppValueAttributes, cmock_retval) LwRegGetValueAttributesA_CMockExpectAndReturn(__LINE__, hRegConnection, hKey, pszSubKey, pszValueName, ppCurrentValue, ppValueAttributes, cmock_retval)
void LwRegGetValueAttributesA_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, IN HANDLE hRegConnection, IN HKEY hKey, IN OPTIONAL PCSTR pszSubKey, IN PCSTR pszValueName, OUT OPTIONAL PLWREG_CURRENT_VALUEINFO* ppCurrentValue, OUT OPTIONAL PLWREG_VALUE_ATTRIBUTES_A* ppValueAttributes, DWORD cmock_to_return);
#define LwRegGetValueAttributesA_ReturnThruPtr_ppCurrentValue(ppCurrentValue) LwRegGetValueAttributesA_CMockReturnMemThruPtr_ppCurrentValue(__LINE__, ppCurrentValue, sizeof(*ppCurrentValue))
#define LwRegGetValueAttributesA_ReturnArrayThruPtr_ppCurrentValue(ppCurrentValue, cmock_len) LwRegGetValueAttributesA_CMockReturnMemThruPtr_ppCurrentValue(__LINE__, ppCurrentValue, (int)(cmock_len * (int)sizeof(*ppCurrentValue)))
#define LwRegGetValueAttributesA_ReturnMemThruPtr_ppCurrentValue(ppCurrentValue, cmock_size) LwRegGetValueAttributesA_CMockReturnMemThruPtr_ppCurrentValue(__LINE__, ppCurrentValue, cmock_size)
void LwRegGetValueAttributesA_CMockReturnMemThruPtr_ppCurrentValue(UNITY_LINE_TYPE cmock_line, OUT OPTIONAL PLWREG_CURRENT_VALUEINFO* ppCurrentValue, int cmock_size);
#define LwRegGetValueAttributesA_ReturnThruPtr_ppValueAttributes(ppValueAttributes) LwRegGetValueAttributesA_CMockReturnMemThruPtr_ppValueAttributes(__LINE__, ppValueAttributes, sizeof(*ppValueAttributes))
#define LwRegGetValueAttributesA_ReturnArrayThruPtr_ppValueAttributes(ppValueAttributes, cmock_len) LwRegGetValueAttributesA_CMockReturnMemThruPtr_ppValueAttributes(__LINE__, ppValueAttributes, (int)(cmock_len * (int)sizeof(*ppValueAttributes)))
#define LwRegGetValueAttributesA_ReturnMemThruPtr_ppValueAttributes(ppValueAttributes, cmock_size) LwRegGetValueAttributesA_CMockReturnMemThruPtr_ppValueAttributes(__LINE__, ppValueAttributes, cmock_size)
void LwRegGetValueAttributesA_CMockReturnMemThruPtr_ppValueAttributes(UNITY_LINE_TYPE cmock_line, OUT OPTIONAL PLWREG_VALUE_ATTRIBUTES_A* ppValueAttributes, int cmock_size);
#define LwRegGetValueAttributesA_IgnoreArg_hRegConnection() LwRegGetValueAttributesA_CMockIgnoreArg_hRegConnection(__LINE__)
void LwRegGetValueAttributesA_CMockIgnoreArg_hRegConnection(UNITY_LINE_TYPE cmock_line);
#define LwRegGetValueAttributesA_IgnoreArg_hKey() LwRegGetValueAttributesA_CMockIgnoreArg_hKey(__LINE__)
void LwRegGetValueAttributesA_CMockIgnoreArg_hKey(UNITY_LINE_TYPE cmock_line);
#define LwRegGetValueAttributesA_IgnoreArg_pszSubKey() LwRegGetValueAttributesA_CMockIgnoreArg_pszSubKey(__LINE__)
void LwRegGetValueAttributesA_CMockIgnoreArg_pszSubKey(UNITY_LINE_TYPE cmock_line);
#define LwRegGetValueAttributesA_IgnoreArg_pszValueName() LwRegGetValueAttributesA_CMockIgnoreArg_pszValueName(__LINE__)
void LwRegGetValueAttributesA_CMockIgnoreArg_pszValueName(UNITY_LINE_TYPE cmock_line);
#define LwRegGetValueAttributesA_IgnoreArg_ppCurrentValue() LwRegGetValueAttributesA_CMockIgnoreArg_ppCurrentValue(__LINE__)
void LwRegGetValueAttributesA_CMockIgnoreArg_ppCurrentValue(UNITY_LINE_TYPE cmock_line);
#define LwRegGetValueAttributesA_IgnoreArg_ppValueAttributes() LwRegGetValueAttributesA_CMockIgnoreArg_ppValueAttributes(__LINE__)
void LwRegGetValueAttributesA_CMockIgnoreArg_ppValueAttributes(UNITY_LINE_TYPE cmock_line);
#define LwRegGetValueAttributesW_IgnoreAndReturn(cmock_retval) LwRegGetValueAttributesW_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void LwRegGetValueAttributesW_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, DWORD cmock_to_return);
#define LwRegGetValueAttributesW_ExpectAndReturn(hRegConnection, hKey, pwszSubKey, pwszValueName, ppCurrentValue, ppValueAttributes, cmock_retval) LwRegGetValueAttributesW_CMockExpectAndReturn(__LINE__, hRegConnection, hKey, pwszSubKey, pwszValueName, ppCurrentValue, ppValueAttributes, cmock_retval)
void LwRegGetValueAttributesW_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, IN HANDLE hRegConnection, IN HKEY hKey, IN OPTIONAL PCWSTR pwszSubKey, IN PCWSTR pwszValueName, OUT OPTIONAL PLWREG_CURRENT_VALUEINFO* ppCurrentValue, OUT OPTIONAL PLWREG_VALUE_ATTRIBUTES* ppValueAttributes, DWORD cmock_to_return);
#define LwRegGetValueAttributesW_ReturnThruPtr_ppCurrentValue(ppCurrentValue) LwRegGetValueAttributesW_CMockReturnMemThruPtr_ppCurrentValue(__LINE__, ppCurrentValue, sizeof(*ppCurrentValue))
#define LwRegGetValueAttributesW_ReturnArrayThruPtr_ppCurrentValue(ppCurrentValue, cmock_len) LwRegGetValueAttributesW_CMockReturnMemThruPtr_ppCurrentValue(__LINE__, ppCurrentValue, (int)(cmock_len * (int)sizeof(*ppCurrentValue)))
#define LwRegGetValueAttributesW_ReturnMemThruPtr_ppCurrentValue(ppCurrentValue, cmock_size) LwRegGetValueAttributesW_CMockReturnMemThruPtr_ppCurrentValue(__LINE__, ppCurrentValue, cmock_size)
void LwRegGetValueAttributesW_CMockReturnMemThruPtr_ppCurrentValue(UNITY_LINE_TYPE cmock_line, OUT OPTIONAL PLWREG_CURRENT_VALUEINFO* ppCurrentValue, int cmock_size);
#define LwRegGetValueAttributesW_ReturnThruPtr_ppValueAttributes(ppValueAttributes) LwRegGetValueAttributesW_CMockReturnMemThruPtr_ppValueAttributes(__LINE__, ppValueAttributes, sizeof(*ppValueAttributes))
#define LwRegGetValueAttributesW_ReturnArrayThruPtr_ppValueAttributes(ppValueAttributes, cmock_len) LwRegGetValueAttributesW_CMockReturnMemThruPtr_ppValueAttributes(__LINE__, ppValueAttributes, (int)(cmock_len * (int)sizeof(*ppValueAttributes)))
#define LwRegGetValueAttributesW_ReturnMemThruPtr_ppValueAttributes(ppValueAttributes, cmock_size) LwRegGetValueAttributesW_CMockReturnMemThruPtr_ppValueAttributes(__LINE__, ppValueAttributes, cmock_size)
void LwRegGetValueAttributesW_CMockReturnMemThruPtr_ppValueAttributes(UNITY_LINE_TYPE cmock_line, OUT OPTIONAL PLWREG_VALUE_ATTRIBUTES* ppValueAttributes, int cmock_size);
#define LwRegGetValueAttributesW_IgnoreArg_hRegConnection() LwRegGetValueAttributesW_CMockIgnoreArg_hRegConnection(__LINE__)
void LwRegGetValueAttributesW_CMockIgnoreArg_hRegConnection(UNITY_LINE_TYPE cmock_line);
#define LwRegGetValueAttributesW_IgnoreArg_hKey() LwRegGetValueAttributesW_CMockIgnoreArg_hKey(__LINE__)
void LwRegGetValueAttributesW_CMockIgnoreArg_hKey(UNITY_LINE_TYPE cmock_line);
#define LwRegGetValueAttributesW_IgnoreArg_pwszSubKey() LwRegGetValueAttributesW_CMockIgnoreArg_pwszSubKey(__LINE__)
void LwRegGetValueAttributesW_CMockIgnoreArg_pwszSubKey(UNITY_LINE_TYPE cmock_line);
#define LwRegGetValueAttributesW_IgnoreArg_pwszValueName() LwRegGetValueAttributesW_CMockIgnoreArg_pwszValueName(__LINE__)
void LwRegGetValueAttributesW_CMockIgnoreArg_pwszValueName(UNITY_LINE_TYPE cmock_line);
#define LwRegGetValueAttributesW_IgnoreArg_ppCurrentValue() LwRegGetValueAttributesW_CMockIgnoreArg_ppCurrentValue(__LINE__)
void LwRegGetValueAttributesW_CMockIgnoreArg_ppCurrentValue(UNITY_LINE_TYPE cmock_line);
#define LwRegGetValueAttributesW_IgnoreArg_ppValueAttributes() LwRegGetValueAttributesW_CMockIgnoreArg_ppValueAttributes(__LINE__)
void LwRegGetValueAttributesW_CMockIgnoreArg_ppValueAttributes(UNITY_LINE_TYPE cmock_line);
#define LwRegDeleteValueAttributesA_IgnoreAndReturn(cmock_retval) LwRegDeleteValueAttributesA_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void LwRegDeleteValueAttributesA_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, DWORD cmock_to_return);
#define LwRegDeleteValueAttributesA_ExpectAndReturn(hRegConnection, hKey, pszSubKey, pszValueName, cmock_retval) LwRegDeleteValueAttributesA_CMockExpectAndReturn(__LINE__, hRegConnection, hKey, pszSubKey, pszValueName, cmock_retval)
void LwRegDeleteValueAttributesA_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, IN HANDLE hRegConnection, IN HKEY hKey, IN OPTIONAL PCSTR pszSubKey, IN PCSTR pszValueName, DWORD cmock_to_return);
#define LwRegDeleteValueAttributesA_IgnoreArg_hRegConnection() LwRegDeleteValueAttributesA_CMockIgnoreArg_hRegConnection(__LINE__)
void LwRegDeleteValueAttributesA_CMockIgnoreArg_hRegConnection(UNITY_LINE_TYPE cmock_line);
#define LwRegDeleteValueAttributesA_IgnoreArg_hKey() LwRegDeleteValueAttributesA_CMockIgnoreArg_hKey(__LINE__)
void LwRegDeleteValueAttributesA_CMockIgnoreArg_hKey(UNITY_LINE_TYPE cmock_line);
#define LwRegDeleteValueAttributesA_IgnoreArg_pszSubKey() LwRegDeleteValueAttributesA_CMockIgnoreArg_pszSubKey(__LINE__)
void LwRegDeleteValueAttributesA_CMockIgnoreArg_pszSubKey(UNITY_LINE_TYPE cmock_line);
#define LwRegDeleteValueAttributesA_IgnoreArg_pszValueName() LwRegDeleteValueAttributesA_CMockIgnoreArg_pszValueName(__LINE__)
void LwRegDeleteValueAttributesA_CMockIgnoreArg_pszValueName(UNITY_LINE_TYPE cmock_line);
#define LwRegDeleteValueAttributesW_IgnoreAndReturn(cmock_retval) LwRegDeleteValueAttributesW_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void LwRegDeleteValueAttributesW_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, DWORD cmock_to_return);
#define LwRegDeleteValueAttributesW_ExpectAndReturn(hRegConnection, hKey, pwszSubKey, pwszValueName, cmock_retval) LwRegDeleteValueAttributesW_CMockExpectAndReturn(__LINE__, hRegConnection, hKey, pwszSubKey, pwszValueName, cmock_retval)
void LwRegDeleteValueAttributesW_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, IN HANDLE hRegConnection, IN HKEY hKey, IN OPTIONAL PCWSTR pwszSubKey, IN PCWSTR pwszValueName, DWORD cmock_to_return);
#define LwRegDeleteValueAttributesW_IgnoreArg_hRegConnection() LwRegDeleteValueAttributesW_CMockIgnoreArg_hRegConnection(__LINE__)
void LwRegDeleteValueAttributesW_CMockIgnoreArg_hRegConnection(UNITY_LINE_TYPE cmock_line);
#define LwRegDeleteValueAttributesW_IgnoreArg_hKey() LwRegDeleteValueAttributesW_CMockIgnoreArg_hKey(__LINE__)
void LwRegDeleteValueAttributesW_CMockIgnoreArg_hKey(UNITY_LINE_TYPE cmock_line);
#define LwRegDeleteValueAttributesW_IgnoreArg_pwszSubKey() LwRegDeleteValueAttributesW_CMockIgnoreArg_pwszSubKey(__LINE__)
void LwRegDeleteValueAttributesW_CMockIgnoreArg_pwszSubKey(UNITY_LINE_TYPE cmock_line);
#define LwRegDeleteValueAttributesW_IgnoreArg_pwszValueName() LwRegDeleteValueAttributesW_CMockIgnoreArg_pwszValueName(__LINE__)
void LwRegDeleteValueAttributesW_CMockIgnoreArg_pwszValueName(UNITY_LINE_TYPE cmock_line);
#define LwRegUpdateConfigItemRange_IgnoreAndReturn(cmock_retval) LwRegUpdateConfigItemRange_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void LwRegUpdateConfigItemRange_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, DWORD cmock_to_return);
#define LwRegUpdateConfigItemRange_ExpectAndReturn(pszConfigKey, pConfig, dwConfigEntries, cmock_retval) LwRegUpdateConfigItemRange_CMockExpectAndReturn(__LINE__, pszConfigKey, pConfig, dwConfigEntries, cmock_retval)
void LwRegUpdateConfigItemRange_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, IN PCSTR pszConfigKey, IN OUT PLWREG_CONFIG_ITEM pConfig, IN DWORD dwConfigEntries, DWORD cmock_to_return);
#define LwRegUpdateConfigItemRange_IgnoreArg_pszConfigKey() LwRegUpdateConfigItemRange_CMockIgnoreArg_pszConfigKey(__LINE__)
void LwRegUpdateConfigItemRange_CMockIgnoreArg_pszConfigKey(UNITY_LINE_TYPE cmock_line);
#define LwRegUpdateConfigItemRange_IgnoreArg_pConfig() LwRegUpdateConfigItemRange_CMockIgnoreArg_pConfig(__LINE__)
void LwRegUpdateConfigItemRange_CMockIgnoreArg_pConfig(UNITY_LINE_TYPE cmock_line);
#define LwRegUpdateConfigItemRange_IgnoreArg_dwConfigEntries() LwRegUpdateConfigItemRange_CMockIgnoreArg_dwConfigEntries(__LINE__)
void LwRegUpdateConfigItemRange_CMockIgnoreArg_dwConfigEntries(UNITY_LINE_TYPE cmock_line);
#define LwRegProcessConfig_IgnoreAndReturn(cmock_retval) LwRegProcessConfig_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void LwRegProcessConfig_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, DWORD cmock_to_return);
#define LwRegProcessConfig_ExpectAndReturn(pszConfigKey, pszPolicyKey, pConfig, dwConfigEntries, cmock_retval) LwRegProcessConfig_CMockExpectAndReturn(__LINE__, pszConfigKey, pszPolicyKey, pConfig, dwConfigEntries, cmock_retval)
void LwRegProcessConfig_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, IN PCSTR pszConfigKey, IN PCSTR pszPolicyKey, IN OUT PLWREG_CONFIG_ITEM pConfig, IN DWORD dwConfigEntries, DWORD cmock_to_return);
#define LwRegProcessConfig_IgnoreArg_pszConfigKey() LwRegProcessConfig_CMockIgnoreArg_pszConfigKey(__LINE__)
void LwRegProcessConfig_CMockIgnoreArg_pszConfigKey(UNITY_LINE_TYPE cmock_line);
#define LwRegProcessConfig_IgnoreArg_pszPolicyKey() LwRegProcessConfig_CMockIgnoreArg_pszPolicyKey(__LINE__)
void LwRegProcessConfig_CMockIgnoreArg_pszPolicyKey(UNITY_LINE_TYPE cmock_line);
#define LwRegProcessConfig_IgnoreArg_pConfig() LwRegProcessConfig_CMockIgnoreArg_pConfig(__LINE__)
void LwRegProcessConfig_CMockIgnoreArg_pConfig(UNITY_LINE_TYPE cmock_line);
#define LwRegProcessConfig_IgnoreArg_dwConfigEntries() LwRegProcessConfig_CMockIgnoreArg_dwConfigEntries(__LINE__)
void LwRegProcessConfig_CMockIgnoreArg_dwConfigEntries(UNITY_LINE_TYPE cmock_line);
#define LwRegProcessConfigUsingAttributeRanges_IgnoreAndReturn(cmock_retval) LwRegProcessConfigUsingAttributeRanges_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void LwRegProcessConfigUsingAttributeRanges_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, DWORD cmock_to_return);
#define LwRegProcessConfigUsingAttributeRanges_ExpectAndReturn(pszConfigKey, pszPolicyKey, pConfig, dwConfigEntries, cmock_retval) LwRegProcessConfigUsingAttributeRanges_CMockExpectAndReturn(__LINE__, pszConfigKey, pszPolicyKey, pConfig, dwConfigEntries, cmock_retval)
void LwRegProcessConfigUsingAttributeRanges_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, IN PCSTR pszConfigKey, IN PCSTR pszPolicyKey, IN OUT PLWREG_CONFIG_ITEM pConfig, IN DWORD dwConfigEntries, DWORD cmock_to_return);
#define LwRegProcessConfigUsingAttributeRanges_IgnoreArg_pszConfigKey() LwRegProcessConfigUsingAttributeRanges_CMockIgnoreArg_pszConfigKey(__LINE__)
void LwRegProcessConfigUsingAttributeRanges_CMockIgnoreArg_pszConfigKey(UNITY_LINE_TYPE cmock_line);
#define LwRegProcessConfigUsingAttributeRanges_IgnoreArg_pszPolicyKey() LwRegProcessConfigUsingAttributeRanges_CMockIgnoreArg_pszPolicyKey(__LINE__)
void LwRegProcessConfigUsingAttributeRanges_CMockIgnoreArg_pszPolicyKey(UNITY_LINE_TYPE cmock_line);
#define LwRegProcessConfigUsingAttributeRanges_IgnoreArg_pConfig() LwRegProcessConfigUsingAttributeRanges_CMockIgnoreArg_pConfig(__LINE__)
void LwRegProcessConfigUsingAttributeRanges_CMockIgnoreArg_pConfig(UNITY_LINE_TYPE cmock_line);
#define LwRegProcessConfigUsingAttributeRanges_IgnoreArg_dwConfigEntries() LwRegProcessConfigUsingAttributeRanges_CMockIgnoreArg_dwConfigEntries(__LINE__)
void LwRegProcessConfigUsingAttributeRanges_CMockIgnoreArg_dwConfigEntries(UNITY_LINE_TYPE cmock_line);

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
